<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[HashMap源码分析]]></title>
      <url>http://www.jibaole.top/2018/04/28/hashmap%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/</url>
      <content type="html"><![CDATA[<blockquote>
<p>HashMap不仅仅是java里面很重要的知识点，也是日常开发使用最多的集合框架。了解它的特性，会对日常开发有很大的帮助。<br><a id="more"></a></p>
</blockquote>
<h2 id="哈希冲突"><a href="#哈希冲突" class="headerlink" title="哈希冲突"></a>哈希冲突</h2><hr>
<p>哈希是指通过某种方法把数据转变成特定的数值，数值根据mod对应到不同的单元上。比如在Java中，字符串就是通过每个字符的编码来计算、数字是本身对应的值等等，不过就算是再好的哈希方法，也有可能出现两个不同的对象hash值相同的情况。如果在HashMap中，hashcode相同，它们就会被分配到对应的存储位置，此时就会出现冲突——也叫做哈希冲突。</p>
<p>解决哈希冲突的方法有很多种：</p>
<p>开放地址探测法：即如果出现哈希冲突，则按照一定的规则继续选择位置，如线性探测法再、二次探测再、伪随机探测等等。<br>链地址法：如果出现冲突，则在冲突的位置后面形成链表进行存储。HashMap就是通过这种方式实现的<br>再哈希法：这种方法是再换另一个哈希方法寻找存储的位置。</p>
<h2 id="hashCode和equals"><a href="#hashCode和equals" class="headerlink" title="hashCode和equals"></a>hashCode和equals</h2><hr>
<p>首先hashcode是经过一定的方法映射出的数值，而equals如果没有重写的话，是对比了每个内部的属性。总结的来说，如果两个对象hashcode相同，它们未必相等；如果hashcode不同，肯定不等。从另一个角度说，如果两个对象equals相等，它们肯定相等；如果equals不同，则它们不同。</p>
<p>那么肯定会有人疑问，那还要hashcode干嘛咧？Hashcode其实就是在hashMap或者hashset进行快速比较的时候有用，可以快速的判断对像是否不同，如果hashcode相同，则再继续对比equals方法。这样可以节省大量的时间。</p>
<h2 id="HashMap"><a href="#HashMap" class="headerlink" title="HashMap"></a>HashMap</h2><p>HashMap允许null的key和value，HashMap根HashTable很像，只不过非线程安全并且允许Null值。</p>
<p>有两个参数会影响Map的性能，分别是初始容量initial capacity和负载参数load facotr(确定了什么时间增加hash table的容量)。当容量超过load factor*initial capacity时，就会进行扩容，然后执行rehash操作。</p>
<p>默认load factor时0.75，它基本已经能提供一个不错的性能效果了。不过在使用的初期可以预估一下数据量，直接设置一个比较适合的初始值。</p>
<p>注意：HashMap不是线程安全的，可以通过<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Map m = Collections.synchronizedMap(new HashMap(...))</span><br></pre></td></tr></table></figure></p>
<p>实现线程安全的map.</p>
<h2 id="创建"><a href="#创建" class="headerlink" title="创建"></a>创建</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">transient Node&lt;K,V&gt;[] table;</span><br><span class="line">transient Set&lt;Map.Entry&lt;K,V&gt;&gt; entrySet;</span><br><span class="line">int threshold;</span><br><span class="line">final float loadFactor;</span><br></pre></td></tr></table></figure>
<h2 id="新增"><a href="#新增" class="headerlink" title="新增"></a>新增</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">public V put(K key, V value) &#123;</span><br><span class="line">    return putVal(hash(key), key, value, false, true);</span><br><span class="line">&#125;</span><br><span class="line">static final int hash(Object key) &#123;</span><br><span class="line">    int h;</span><br><span class="line">    return (key == null) ? 0 : (h = key.hashCode()) ^ (h &gt;&gt;&gt; 16);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="主要的代码在这里："><a href="#主要的代码在这里：" class="headerlink" title="主要的代码在这里："></a>主要的代码在这里：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">final V putVal(int hash, K key, V value, boolean onlyIfAbsent,boolean evict) &#123;</span><br><span class="line">    Node&lt;K,V&gt;[] tab; Node&lt;K,V&gt; p; int n, i;</span><br><span class="line">    if ((tab = table) == null || (n = tab.length) == 0)</span><br><span class="line">        n = (tab = resize()).length;</span><br><span class="line">    if ((p = tab[i = (n - 1) &amp; hash]) == null)</span><br><span class="line">        tab[i] = newNode(hash, key, value, null);</span><br><span class="line">    else &#123;</span><br><span class="line">        Node&lt;K,V&gt; e; K k;</span><br><span class="line">        if (p.hash == hash &amp;&amp;</span><br><span class="line">            ((k = p.key) == key || (key != null &amp;&amp; key.equals(k))))</span><br><span class="line">            e = p;</span><br><span class="line">        else if (p instanceof TreeNode)</span><br><span class="line">            e = ((TreeNode&lt;K,V&gt;)p).putTreeVal(this, tab, hash, key, value);</span><br><span class="line">        else &#123;</span><br><span class="line">            for (int binCount = 0; ; ++binCount) &#123;</span><br><span class="line">                if ((e = p.next) == null) &#123;</span><br><span class="line">                    p.next = newNode(hash, key, value, null);</span><br><span class="line">                    // 如果每个链表长度超过8，那么就转为红黑树</span><br><span class="line">                    if (binCount &gt;= TREEIFY_THRESHOLD - 1) // -1 for 1st</span><br><span class="line">                        treeifyBin(tab, hash);</span><br><span class="line">                    break;</span><br><span class="line">                &#125;</span><br><span class="line">                if (e.hash == hash &amp;&amp;</span><br><span class="line">                    ((k = e.key) == key || (key != null &amp;&amp; key.equals(k))))</span><br><span class="line">                    break;</span><br><span class="line">                p = e;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        if (e != null) &#123; // existing mapping for key</span><br><span class="line">            V oldValue = e.value;</span><br><span class="line">            if (!onlyIfAbsent || oldValue == null)</span><br><span class="line">                e.value = value;</span><br><span class="line">            afterNodeAccess(e);</span><br><span class="line">            return oldValue;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    ++modCount;</span><br><span class="line">    if (++size &gt; threshold)</span><br><span class="line">        resize();</span><br><span class="line">    afterNodeInsertion(evict);</span><br><span class="line">    return null;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>对于写操作的场景：</p>
<p>先会经过hash计算hashcode然后与size进行&amp;操作，判断存储的位置<br>如果存储的位置没有节点，则直接写入<br>如果存储的位置有节点，且是树节点，则向树中插入节点<br>如果存储的位置有节点，不是树节点（而是普通的链表），则进行头插。但是会判断当前链表的长度，如果超过设置的阈值（默认是8），就会把链表转化成树。<br>更新的时候也是上面的操作流程，只不过在对比hashcode相同时，还会检查key是否equals</p>
<p>读取和删除基本上也是上面的套路。</p>
<p>为什么非线程安全<br>这个主要是因为在rehash的时候由于table[]后面接的是链表，而hashMap还是采用头插的形式。因此如果有不同的线程同时进行rehash，就可能导致链表形成环形，造成死循环。</p>
<p>具体的可以参考网上的文章：<a href="https://coolshell.cn/articles/9606.html" target="_blank" rel="noopener">https://coolshell.cn/articles/9606.html</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[分布式理论-从ACID到CAP再到BASE]]></title>
      <url>http://www.jibaole.top/2018/04/28/%E4%BB%8Eacid%E5%88%B0cap%E5%86%8D%E5%88%B0base/</url>
      <content type="html"><![CDATA[<blockquote>
<p>在传统的数据中，有ACID四大原则，在分布式中也有对应的CAP理论和BASE理论，这些都是分布式理论的基础~<br>   <a id="more"></a></p>
</blockquote>
<h3 id="一、ACID"><a href="#一、ACID" class="headerlink" title="一、ACID"></a>一、ACID</h3><blockquote>
<p>ACID分别是Atomicity 原子性、Consistency 一致性、Isolation 隔离性、Durability 持久性，有了这几个特性，就保证了数据库的可靠。</p>
</blockquote>
<h4 id="原子性"><a href="#原子性" class="headerlink" title="原子性"></a>原子性</h4><blockquote>
<p>原子性代表一系列的操作要么全做，要么全不做。比如，在银行转账，从一个账号扣钱，另一个账号加钱，这两个操作必须同时进行。否则就会出现账目对不上的情况。</p>
</blockquote>
<h4 id="一致性"><a href="#一致性" class="headerlink" title="一致性"></a>一致性</h4><blockquote>
<p>一致性官方的描述是，事务执行后必须是从一个一致性状态转到另一个一致性状态。通俗点说就是保证整个系统在操作完成后，虽然处于不同状态，但仍保持一致。比如在转账情境中，从一个账号转出500，转入另一个账号，那么整个系统的金额不应该有变化。</p>
</blockquote>
<h4 id="隔离性"><a href="#隔离性" class="headerlink" title="隔离性"></a>隔离性</h4><blockquote>
<p>隔离性意味着多个并发之间是不可见的，相互隔离不被打扰。隔离性在数据库操作中还是很重要的，如果不考虑隔离性，可能会出现下面的问题：</p>
</blockquote>
<figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">脏读：事务<span class="built_in">T1</span>读取了事务<span class="built_in">T2</span>未提交的数据，结果事务<span class="built_in">T2</span>回滚了，<span class="built_in">T1</span>拿到了一个脏数据</span><br><span class="line">不可重复读：事务<span class="built_in">T1</span>读取数据后，紧接着事务<span class="built_in">T2</span>就更新了数据，事务<span class="built_in">T1</span>再次读取的时候发现数据不一致了</span><br><span class="line">幻读：这种一般发生在大批量修改的时候，比如事务<span class="built_in">T1</span>把所有的数据从<span class="number">1</span>修改到了<span class="number">2</span>，结果修改的过程中，事务<span class="built_in">T2</span>插入了一条新数据<span class="number">1</span>。最后检查数据发现有一条数据没有修改过来。</span><br><span class="line">针对这几种情况，数据库如Mysql提供了几种事务的隔离级别：</span><br><span class="line"></span><br><span class="line">Serializable (串行化)：可避免脏读、不可重复读、幻读的发生。</span><br><span class="line">Repeatable read (可重复读)：可避免脏读、不可重复读的发生。</span><br><span class="line">Read committed (读已提交)：可避免脏读的发生。</span><br><span class="line">Read uncommitted (读未提交)：最低级别，任何情况都无法保证。</span><br><span class="line">持久性</span><br><span class="line">这种最容易理解了，事务提交后，结果就保存不变了。</span><br></pre></td></tr></table></figure>
<p>###二、CAP</p>
<blockquote>
<p>在分布式系统中，也有类似ACID的特性，那就是CAP，他们分别是：<br><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Consistency 一致性，强调进群节点中数据一致。在分布式中一致性又包括强一致性和弱一致性，强一致性就是指在任何时刻任何节点看到的数据都是一样的；弱一致性一般实现是最终一致性，即刚开始可能存在差异，但随着时间的推移，最终数据保持一致。</span><br><span class="line">Availability 可用性，强调集群在任何时间内都正常使用</span><br><span class="line">Partition Tolerance 分区容错性，即使某一部分集群坏掉，另一部分仍能正常工作。</span><br><span class="line">这三个特性只能满足其中两个，牺牲另一个。大部分系统也都是如此：</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">一般来说分布式集群都会保证P优先，即集群部分节点坏死不影响整个集群的使用，然后再去追求C和A。因为如果放弃P——分区可用性，那不如就直接使用多个传统数据库了。事实上，很多微服务分库分表就是这个道理。</span><br><span class="line"></span><br><span class="line">如果追求强一致性，那么势必会导致可用性下降。比如在<span class="literal">Master</span>-<span class="literal">Slave</span>的场景中，<span class="literal">Master</span>负责数据写入，然后分发给各个节点，所有节点都写入成功，才算写入，这样保证了强一致性，但是延迟也会随之增加，导致可用性降低。</span><br><span class="line"></span><br><span class="line">因此在可用性和一致性之间，就出现了各种解决方案，如时序一致性、最终一致性等等。</span><br></pre></td></tr></table></figure></p>
</blockquote>
<p>###三、BASE</p>
<blockquote>
<p>前面由于分布式在CAP面前各种纠结，因此有人总结出了一套适合分布式的理论——BASE：<br><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">BA，Basically Available 基本可用，比如降低性能要求、或者功能特性来保证整体的服务可用。比如服务的降级、增加延迟、等待等等。</span><br><span class="line">S，Soft State 软状态，允许出现中间状态，比如节点的不同副本之间同步存在延迟</span><br><span class="line">E，Eventual Consistency 最终一致性，具体的方案有很多，如因果一致性、读己一致性、会话一致性、单调读一致、单调写一致。</span><br><span class="line">对于这几种一致性，可以简单的说一下：</span><br><span class="line"></span><br><span class="line">因果一致性：进程B对进程<span class="keyword">A</span>有依赖关系，那么B读取到的应该总是<span class="keyword">A</span>更新后的值</span><br><span class="line">读己一致性：进程<span class="keyword">A</span>更新某个值后，它自己读到的应该是最新的值</span><br><span class="line">会话一致性：在会话中进行操作，需要保证总是读取到最新的值</span><br><span class="line">单调读一致：从系统读取某个值后，不应该读取到比它还旧的值</span><br><span class="line">单调写一致：同一个进程对系统的写操作，需要保证顺序</span><br></pre></td></tr></table></figure></p>
</blockquote>
<p>参考:<br><a href="https://www.cnblogs.com/duanxz/p/5229352.html" target="_blank" rel="noopener">CAP原则(CAP定理)</a>、<a href="https://www.cnblogs.com/duanxz/p/5229352.html" target="_blank" rel="noopener">BASE理论</a>  </p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[程序员日常工具清单(汇总!!!)]]></title>
      <url>http://www.jibaole.top/2018/01/09/tools/</url>
      <content type="html"><![CDATA[<blockquote>
<p>保存知识的类型包括图片、链接、文章、资源等等,如何保存、管理平时接触到的内容,同类工具相互对比、选择呢?如何高效率完成工作,<br>我对自己平时使用过的工具归类、总结，希望对大家有所帮助!!!</p>
</blockquote>
<a id="more"></a>
<p><img src="http://p22kojxuy.bkt.clouddn.com/coding.gif" alt="码农们"></p>
<blockquote>
<p><strong>记录工具</strong></p>
<ul>
<li>有道笔记:<a href="https://www.youdao.com" target="_blank" rel="noopener">https://www.youdao.com</a>(强烈推荐)</li>
<li>Evernote:<a href="https://www.yinxiang.com/" target="_blank" rel="noopener">https://www.yinxiang.com/</a></li>
<li>OneNote:<a href="http://www.onenote.com/download/" target="_blank" rel="noopener">http://www.onenote.com/download/</a></li>
</ul>
<p><strong>云存储类</strong></p>
<ul>
<li>腾讯-微云:<a href="https://www.weiyun.com/" target="_blank" rel="noopener">https://www.weiyun.com/</a>(强烈推荐)</li>
<li>百度云盘:<a href="https://pan.baidu.com/" target="_blank" rel="noopener">https://pan.baidu.com/</a></li>
<li>七牛云:<a href="https://www.qiniu.com/" target="_blank" rel="noopener">https://www.qiniu.com/</a></li>
<li>Dropbox:<a href="https://www.dropbox.com/" target="_blank" rel="noopener">https://www.dropbox.com/</a></li>
<li>Google Drive:<a href="https://www.drive.google.com/" target="_blank" rel="noopener">https://www.drive.google.com/</a></li>
<li>外链工厂:<a href="http://www.wailian.work/image/Mg8kko" target="_blank" rel="noopener">http://www.wailian.work/image/Mg8kko</a></li>
</ul>
<p><strong>搜索工具</strong></p>
<ul>
<li>谷歌:<a href="https://www.google.com.hk/" target="_blank" rel="noopener">https://www.google.com.hk/</a>(强烈推荐)</li>
<li>百度:<a href="http://www.baidu.com/" target="_blank" rel="noopener">http://www.baidu.com/</a></li>
<li>必应:<a href="https://cn.bing.com/" target="_blank" rel="noopener">https://cn.bing.com/</a></li>
</ul>
<p><strong>桌面搜索</strong></p>
<ul>
<li>Everything:<a href="http://www.voidtools.com/" target="_blank" rel="noopener">http://www.voidtools.com/</a></li>
</ul>
<p><strong>分析</strong></p>
<ul>
<li>Google Analytics:<a href="http://www.voidtools.com/" target="_blank" rel="noopener">http://www.voidtools.com/</a></li>
<li>百度统计:<a href="https://tongji.baidu.com/" target="_blank" rel="noopener">https://tongji.baidu.com/</a></li>
</ul>
<p><strong>编辑器</strong></p>
<ul>
<li>Sublime Text3:<a href="https://www.sublimetext.com/3" target="_blank" rel="noopener">https://www.sublimetext.com/3</a></li>
<li>notepad++:<a href="https://notepad-plus-plus.org/" target="_blank" rel="noopener">https://notepad-plus-plus.org/</a></li>
<li>vim:<a href="http://www.vim.org/" target="_blank" rel="noopener">http://www.vim.org/</a></li>
</ul>
<p><strong>开发调试工具</strong></p>
<ul>
<li>Postman:<a href="https://www.getpostman.com/" target="_blank" rel="noopener">https://www.getpostman.com/</a></li>
<li>IDE:<a href="https://www.jetbrains.com/idea/" target="_blank" rel="noopener">https://www.jetbrains.com/idea/</a>(强烈推荐)</li>
<li>Xshell5:<a href="https://www.netsarang.com/download/main.html" target="_blank" rel="noopener">https://www.netsarang.com/download/main.html</a></li>
<li>flashfxp:<a href="https://www.flashfxp.com/" target="_blank" rel="noopener">https://www.flashfxp.com/</a></li>
<li>SecureCRTP:<a href="http://rj.baidu.com/soft/detail/13503.html" target="_blank" rel="noopener">http://rj.baidu.com/soft/detail/13503.html</a></li>
<li>FTP管理:<a href="https://www.netsarang.com/download/down_xfp.html" target="_blank" rel="noopener">https://www.netsarang.com/download/down_xfp.html</a></li>
<li>Navicat for xxx系列:<a href="http://www.navicat.com.cn/" target="_blank" rel="noopener">http://www.navicat.com.cn/</a></li>
<li>本地代理Whistle：<a href="https://avwo.github.io/whistle/install.html" target="_blank" rel="noopener">https://avwo.github.io/whistle/install.html</a></li>
<li>OpenVPN GUI:<a href="https://github.com/OpenVPN/openvpn-gui/releases" target="_blank" rel="noopener">https://github.com/OpenVPN/openvpn-gui/releases</a></li>
<li>SwitchHosts:<a href="https://github.com/oldj/SwitchHosts/downloads" target="_blank" rel="noopener">https://github.com/oldj/SwitchHosts/downloads</a></li>
<li>mogo管理工具：<a href="https://robomongo.org/" target="_blank" rel="noopener">https://robomongo.org/</a></li>
<li>Redis管理工具：<a href="https://redisdesktop.com/" target="_blank" rel="noopener">https://redisdesktop.com/</a></li>
<li>文件对比工具：<a href="http://www.scootersoftware.com/download.php" target="_blank" rel="noopener">http://www.scootersoftware.com/download.php</a></li>
<li>内网穿透-Ngrok：<a href="https://ngrok.com/" target="_blank" rel="noopener">https://ngrok.com/</a> | natapp:<a href="https://natapp.cn/login" target="_blank" rel="noopener">https://natapp.cn/login</a>(强烈推荐)</li>
<li>jd-gui:<a href="http://jd.benow.ca/" target="_blank" rel="noopener">http://jd.benow.ca/</a></li>
<li>JSON View:<a href="http://jsonviewer.codeplex.com/" target="_blank" rel="noopener">http://jsonviewer.codeplex.com/</a></li>
</ul>
<p><strong>VPN</strong></p>
<ul>
<li>搬瓦工:<a href="https://www.bwh1.net/" target="_blank" rel="noopener">https://www.bwh1.net/</a></li>
<li>OpenVPN:<a href="https://github.com/OpenVPN/openvpn-gui/releases" target="_blank" rel="noopener">https://github.com/OpenVPN/openvpn-gui/releases</a></li>
</ul>
<p><strong>文档流程图</strong></p>
<ul>
<li>processon:<a href="https://www.processon.com/" target="_blank" rel="noopener">https://www.processon.com/</a>(强烈推荐)</li>
<li>百度脑图:<a href="http://naotu.baidu.com/" target="_blank" rel="noopener">http://naotu.baidu.com/</a></li>
<li>XMind <a href="http://www.xmindchina.net" target="_blank" rel="noopener">http://www.xmindchina.net</a></li>
</ul>
<p><strong>产品设计</strong></p>
<ul>
<li>axure:<a href="https://www.axure.com/" target="_blank" rel="noopener">https://www.axure.com/</a></li>
<li>创客贴:<a href="https://www.chuangkit.com/" target="_blank" rel="noopener">https://www.chuangkit.com/</a></li>
<li>墨刀:<a href="https://modao.cc/" target="_blank" rel="noopener">https://modao.cc/</a></li>
<li>xiaopiu:<a href="https://www.xiaopiu.com/" target="_blank" rel="noopener">https://www.xiaopiu.com/</a></li>
</ul>
<p><strong>技术资讯</strong></p>
<ul>
<li>开发者头条:<a href="https://toutiao.io/" target="_blank" rel="noopener">https://toutiao.io/</a></li>
<li>掘金:<a href="https://juejin.im/" target="_blank" rel="noopener">https://juejin.im/</a></li>
<li>一点资讯:<a href="http://www.yidianzixun.com/" target="_blank" rel="noopener">http://www.yidianzixun.com/</a></li>
<li>简书:<a href="https://www.jianshu.com/" target="_blank" rel="noopener">https://www.jianshu.com/</a></li>
<li>开源中国:<a href="https://www.oschina.net/" target="_blank" rel="noopener">https://www.oschina.net/</a></li>
<li>CSDN:<a href="https://www.csdn.net/" target="_blank" rel="noopener">https://www.csdn.net/</a></li>
</ul>
<p><strong>在线学习</strong></p>
<ul>
<li>极客学院:<a href="http://www.jikexueyuan.com/" target="_blank" rel="noopener">http://www.jikexueyuan.com/</a></li>
<li>51CTO:<a href="http://edu.51cto.com/" target="_blank" rel="noopener">http://edu.51cto.com/</a></li>
<li>知识图谱:<a href="http://lib.csdn.net/bases" target="_blank" rel="noopener">http://lib.csdn.net/bases</a></li>
</ul>
<p><strong>抢票软件</strong></p>
<ul>
<li>12306分流抢票:<a href="http://www.12306bypass.com/" target="_blank" rel="noopener">http://www.12306bypass.com/</a>(强烈推荐)</li>
<li>智行:<a href="http://www.suanya.cn/" target="_blank" rel="noopener">http://www.suanya.cn/</a></li>
</ul>
<p><strong>时间管理</strong></p>
<ul>
<li>滴答清单:<a href="https://www.dida365.com/" target="_blank" rel="noopener">https://www.dida365.com/</a></li>
</ul>
<p><strong>云端收藏夹</strong></p>
<ul>
<li>收趣:<a href="http://shouqu.me/" target="_blank" rel="noopener">http://shouqu.me/</a>(强烈推荐)</li>
</ul>
<p><strong>在线工具</strong></p>
<ul>
<li>有道翻译:<a href="http://fanyi.youdao.com/" target="_blank" rel="noopener">http://fanyi.youdao.com/</a> | 百度翻译:<a href="http://fanyi.baidu.com/" target="_blank" rel="noopener">http://fanyi.baidu.com/</a></li>
<li>在线大全：<a href="https://tool.lu/" target="_blank" rel="noopener">https://tool.lu/</a></li>
<li>JS:<a href="http://runjs.cn/code" target="_blank" rel="noopener">http://runjs.cn/code</a></li>
<li>excel互转:<a href="https://smallpdf.com/" target="_blank" rel="noopener">https://smallpdf.com/</a></li>
</ul>
<p><strong>博客平台</strong></p>
<ul>
<li>Hexo:<a href="https://hexo.io/" target="_blank" rel="noopener">https://hexo.io/</a>(强烈推荐)</li>
<li>wordpress:<a href="https://cn.wordpress.org/" target="_blank" rel="noopener">https://cn.wordpress.org/</a></li>
</ul>
<p><strong>论坛</strong></p>
<ul>
<li>discuz:<a href="http://www.discuz.net/" target="_blank" rel="noopener">http://www.discuz.net/</a></li>
</ul>
</blockquote>
<p><img src="http://p22kojxuy.bkt.clouddn.com/tools.png" alt="why?"></p>
<p> 后续不断更新ing……</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[互联网程序员行话]]></title>
      <url>http://www.jibaole.top/2018/01/09/%E4%BA%92%E8%81%94%E7%BD%91%E9%BB%91%E8%AF%9D/</url>
      <content type="html"><![CDATA[<pre><code>一、招聘行话大全，能听懂证明你是历经磨难的老司机刚开始投简历时，你总以为是这样的，其实大部分情况下是那样的……面试之后，HR让回去等消息，傻傻的等待，半个月以上没有回音，各种焦虑……明面上的意思就是实际意思的公司，貌似都是说的是别人的公司~~~~
</code></pre><a id="more"></a>
<p><img src="http://p22kojxuy.bkt.clouddn.com/Article/img/2018/01/internetheihua.png" alt="O(∩_∩)O哈哈~"><br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">&gt;下面是职场达人总结的招聘行业术语（俗称招聘黑话），一看就懂证明你是历经磨难且具有拼搏精神的老司机，让我们一起来看看吧：</span><br><span class="line"><span class="number">1</span>、能承受较大的工作压力——加班</span><br><span class="line"><span class="number">2</span>、抗压能力强——加班+替别人扛雷</span><br><span class="line"><span class="number">3</span>、工作有激情——自觉加班还要特美</span><br><span class="line"><span class="number">4</span>、有强烈责任心——没做完不准走</span><br><span class="line"><span class="number">5</span>、弹性工作制——加班不给加班费</span><br><span class="line"><span class="number">6</span>、弹性工作制，但不保证准时下班——做完了才准走</span><br><span class="line"><span class="number">7</span>、包三餐——早晚都得加班</span><br><span class="line"><span class="number">8</span>、双休——工作日加班</span><br><span class="line"><span class="number">9</span>、薪资+社保+带薪休假+职位晋升——是个正经公司都有，没什么拿得出手的福利</span><br><span class="line"><span class="number">10</span>、适应较快的工作节奏——加班把三天的工作两天做完</span><br><span class="line"><span class="number">11</span>、公司提供水果——貌似也就这一个福利</span><br><span class="line"><span class="number">12</span>、有强烈的上进心——干完工作就加班去干其他工作</span><br><span class="line"><span class="number">13</span>、喜欢有挑战性的工作——加班、前人留的坑不少</span><br><span class="line"><span class="number">14</span>、不提倡加班——你懂的（该加还得加，加班是因为你工作效率低，不是安排工作多）</span><br><span class="line"><span class="number">15</span>、不强制加班——你懂的 （不做完额外安排的工作你走一个试试！）</span><br><span class="line"><span class="number">16</span>、上不封顶——下不保底</span><br><span class="line"><span class="number">17</span>、偶尔会忙——以后忙了你别抱怨，提醒过了</span><br><span class="line"><span class="number">18</span>、团队氛围很好——大家经常一起加班，一起吃加班餐，聊聊工作，多happy</span><br><span class="line"><span class="number">19</span>、上升空间大——工资低，<span class="number">3000</span>元涨个<span class="number">50</span>%不也就<span class="number">4500</span>吗？</span><br><span class="line"><span class="number">20</span>、领导安排的其它任务——我叫你干啥你就得干啥</span><br><span class="line"><span class="number">21</span>、妹子多——这个屌丝虽然脑子不太好使但便宜，看看这个理由能不能骗一蛤</span><br><span class="line"><span class="number">22</span>、有期权——没多余的现金发工资给你</span><br><span class="line"><span class="number">23</span>、有股权——工资微妙地低于你应得的数，反正我不信你能干满拿走</span><br><span class="line"><span class="number">24</span>、年底双薪——<span class="number">13</span> 薪</span><br><span class="line"><span class="number">25</span>、<span class="number">13</span> 薪起——别想了，就是<span class="number">13</span> 薪</span><br><span class="line"><span class="number">26</span>、年底有奖金——年薪大于 <span class="number">12</span> 薪小于 <span class="number">13</span> 薪</span><br><span class="line"><span class="number">27</span>、我们 <span class="number">6</span> 点准时下班 -——入职才知道最严重的早晨 <span class="number">6</span> 点下班，回家吃早饭睡觉。</span><br><span class="line"><span class="number">28</span>、扁平化管理 -——领导和你坐一屋，盯着你干活</span><br><span class="line"><span class="number">29</span>、核心团队来自 BAT ——嗯，你不是BAT的，所以你不是核心</span><br><span class="line"><span class="number">30</span>、<span class="string">"我把你的简历整理一下"</span>——对方说这个的话基本可以判断他是卖人头外派的了,把你的简历给他的甲方。</span><br><span class="line"><span class="number">31</span>、弹性工作时间——只弹下班（下班时间不固定），不弹上班</span><br><span class="line"><span class="number">32</span>、能独立完成任务 ——前端后端或产品测试推广运营全都你一个人干</span><br><span class="line"><span class="number">33</span>、领导好——看你顺眼就好，不顺眼就 XX ；你有生之年不可能有晋升的空间</span><br><span class="line"><span class="number">34</span>、XXX 比钱重要——钱达不到你的要求</span><br><span class="line"><span class="number">35</span>、公司会给你培训，但是工作之后你要交培训费——麻痹就是培训班</span><br><span class="line"><span class="number">36</span>、BAT 薪资——略微高于本地市场价</span><br><span class="line"><span class="number">37</span>、帮员工避税——按最低工资给你交社保公积金（五险一金）</span><br><span class="line"><span class="number">38</span>、我们是创业公司——有不少坑要填，另请做好加班拼命的准备</span><br><span class="line"><span class="number">39</span>、老板 /负责人不在，稍后会联系你的——面试不合格，不要抱期望了</span><br></pre></td></tr></table></figure></p>
<blockquote>
<p>二、独具互联网特色的招聘行话</p>
</blockquote>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">40、期权激励拿到手软——希望能弥补你看到基本工资后的脚软</span><br><span class="line">41、专注移动互联网，拥有几亿活跃用户——&gt;就注册了个微信公众号</span><br><span class="line">42、有活力的技术团队——团队平均工作经验<span class="tag">&lt;<span class="name">1年</span></span></span><br><span class="line"><span class="tag"><span class="attr">43</span>、创始团队全部来自<span class="attr">BAT</span>——&gt;</span>在淘宝干过客服、自己玩过微信公众号、还在百度实过习</span><br><span class="line">44、千亿市场的探索者——目前尚没看清具体市场在哪</span><br><span class="line">45、扁平化管理，高度自由——全公司人数，一只手就数的过来。</span><br><span class="line">46、典型欧美创业工作环境——办公室现处于毛坯房状态</span><br><span class="line">47、新技术+新方向+新团队——嗯，目前这三样都没有</span><br><span class="line">48、直进核心团队——公司尚未设置非核心团队岗</span><br><span class="line">49、全方位成长机会——你有很大机会成为外卖超人</span><br><span class="line">50、有机会晋升技术合伙人 ——&gt;现在就缺一个程序员来码代码了!</span><br><span class="line">51、提供各种福利——每样细说咱就伤感情了</span><br><span class="line">52、福利完善，待遇从优——&gt;严格按照法定节假日上班和……上班。</span><br><span class="line">53、有完善的员工期权激励措施——&gt;所以对工资要求别太高。</span><br><span class="line">54、提供住宿、班车及两餐——每周提供数小时时间与家人团聚</span><br><span class="line">55、底薪+岗位绩效+职称奖+管理绩效+提成+五险 ——和在一块您看看够不56、够付这个月房租?</span><br><span class="line">57、加入我们，给你足够大的发展空间！——目前公司规模<span class="tag">&lt;<span class="name">10人</span></span></span><br><span class="line"><span class="tag"><span class="attr">58</span>、女性员工占一半以上——&gt;</span>创业公司的员工性别结构为:男生、女汉子以及别人的女友。</span><br><span class="line">59、深受资本追捧，行业方向被投资人看好——&gt;又有几个同行拿到融资了，而他们还在追着投资人跑</span><br><span class="line">60、大牛云集——我司属牛的同事比较多</span><br><span class="line">61、与互联网大咖面对面，有巨大成长空间——&gt;加了个混充有某某大佬的微信群，常年潜水从不说话，好友更不加。</span><br><span class="line">62、公司计划短期内上市——您也知道计划一般赶不上变化</span><br><span class="line">63、徘徊在牛A和牛C之间一群人！——永不止步，从来没在牛B上停驻过</span><br></pre></td></tr></table></figure>
<blockquote>
<p>三、程序员的职场行话<br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">程序员也有自己的行业表达方式，这些话只要是老司机都能懂的：</span><br><span class="line"><span class="number">1</span>、那个bug没问题啊，你再试试——刚偷偷改完这个bug</span><br><span class="line"><span class="number">2</span>、下个版本再做吧——根本就不想做</span><br><span class="line"><span class="number">3</span>、正在改——忘了有这回事了</span><br><span class="line"><span class="number">4</span>、需求太不合理——这逻辑不好做</span><br><span class="line"><span class="number">5</span>、别人家的实现方式不一样——我不会做</span><br><span class="line"><span class="number">6</span>、产品逻辑不对——傻X，还不如我上</span><br><span class="line"><span class="number">7</span>、最近老加班——老板该加工资了</span><br><span class="line"><span class="number">8</span>、我回去评估一下技术难度——先拖两天</span><br><span class="line"><span class="number">9</span>、你这个需求不清晰——我不想做</span><br><span class="line"><span class="number">10</span>、你确定有这个需求吗？——做出来没人用老子跟你拼了</span><br><span class="line"><span class="number">11</span>、下次肯定不延期了——先应付了这次再说</span><br><span class="line"><span class="number">12</span>、你试过……——到底会不会用我的程序啊</span><br><span class="line"><span class="number">13</span>、我测试没问题啊！——到底会不会用我的程序啊</span><br><span class="line"><span class="number">14</span>、我的时间排满了——我不想做</span><br><span class="line"><span class="number">15</span>、我有优先级更高的任务——我不想做</span><br><span class="line"><span class="number">16</span>、我今晚有事——我今天不想加班</span><br><span class="line"><span class="number">17</span>、我在调试程序——我没时间理你</span><br><span class="line"><span class="number">18</span>、你怎么还在自学Python啊？——PHP才是最好的语言</span><br><span class="line"><span class="number">19</span>、你怎么还用 Word 啊？——Markdown 才是最好的写作工具</span><br><span class="line"><span class="number">20</span>、你怎么还在用 ThinkPad 啊？——Mac 才是最好的电脑</span><br></pre></td></tr></table></figure></p>
<p>四、互联网人常用的行话</p>
</blockquote>
<p><img src="http://p22kojxuy.bkt.clouddn.com/Article/img/2018/01/timg.jpg" alt="BAT大佬们"><br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>、熊厂、狼厂、蓝厂——百度</span><br><span class="line">百度的Logo是一个蓝色的熊爪子，所以蓝厂和熊厂的名字是这样来的，但是相比来说，百度更多的时候被叫做狼厂，起源于百度CEO李彦宏给百度员工的一封公开信：《鼓励狼性淘汰小资》，引起广泛的讨论，之后百度有员工就开始称百度为「狼厂」。</span><br><span class="line">百老汇——百度离职员工组织</span><br><span class="line">百度老员工汇聚地，知名“百老汇”成员有王啸、边江、毕胜、周品等。</span><br><span class="line">肉饼——李彦宏</span><br><span class="line">同百度CEO李彦宏的英文名Robin的发音，李彦宏也叫厂长。有个段子是：</span><br><span class="line">“LR过了没有？”</span><br><span class="line">“没有提。”</span><br><span class="line">“经理批了没有？”</span><br><span class="line">“没有。”</span><br><span class="line">“架构批了没有？”</span><br><span class="line">“没有。”</span><br><span class="line">“需求池里排队了没有？”</span><br><span class="line">“没有。”</span><br><span class="line">“那你特喵跟我要排期？”</span><br><span class="line">“厂长报的。”</span><br><span class="line">“明天启动，周五上线！”</span><br><span class="line">狼性——洗脑</span><br><span class="line">在百度认可公司价值观，被称为狼性，被员工私下称为奴性。</span><br><span class="line"><span class="number">2</span>、猫厂、东厂、西厂——阿里巴巴</span><br><span class="line">阿里巴巴是因为旗下天猫的Logo而演变来的，所以叫做猫厂。除此之外在浙江杭州有东西两处办公地点，被内部员工称为东厂和西厂。</span><br><span class="line">曾经的阿里人、前橙会、阿里校友会——阿里离职员工组织</span><br><span class="line">曾经的阿里人和阿里校友会这两个名字都是很好理解的，前橙会名字的由来是因为橙色是阿里巴巴的标志色彩,“前橙会”顾名思义是聚集阿里巴巴“原厂”员工的一个机构。</span><br><span class="line">百阿——洗脑</span><br><span class="line">百阿是百年阿里的简称，阿里巴巴从<span class="number">1999</span>年成立，马云的设想是做到<span class="number">102</span>年，这样就可以横跨<span class="number">20</span>、<span class="number">21</span>、<span class="number">22</span>三个世纪。百阿是新员工培训，戏称洗脑。</span><br><span class="line"><span class="number">996</span>——工作时间</span><br><span class="line">猫厂专用，指早上<span class="number">9</span>点上班，晚上<span class="number">9</span>点下班，一周工作<span class="number">6</span>天。<span class="number">997</span>就是一周工作<span class="number">7</span>天。</span><br><span class="line"><span class="number">3.25</span>——KPI</span><br><span class="line">阿里公司每年两次KPI考核，考核一般分为<span class="number">3.25</span>、<span class="number">3.5</span>、<span class="number">3.75</span>，其比例是<span class="number">163</span>，也就是<span class="number">10</span>个人里必须有一个人拿<span class="number">3.25</span>，两次<span class="number">3.25</span>有可能要被末位淘汰。</span><br><span class="line">拥抱变化——变需求</span><br><span class="line">阿里公司的价值观之一，员工要时刻拥护。比方一个项目变来变去，可以说我们这是拥抱变化。</span><br><span class="line"><span class="number">3</span>、鹅厂——腾讯</span><br><span class="line">腾讯名字的原由就比较简单了，因为腾讯的Logo是一只企鹅，企鹅也是鹅。</span><br><span class="line">南极圈、单飞的企鹅——腾讯离职员工组织</span><br><span class="line">腾讯经常在发布的产品中采用“飞翔的企鹅”作为昵称，因此这些离职的朋友把群的名字叫做“单飞的企鹅”。</span><br><span class="line">瑞雪——文明</span><br><span class="line">鹅厂专用，代表腾讯人良好的行为举止，涵盖道德、礼仪、职业行为，起源于某年腾讯员工冒着雨雪正常进行年会演出。不良好的行为比方插队，可以说这个人真不瑞雪。</span><br><span class="line">高压线——泄露工资</span><br><span class="line">鹅厂专用。有几条，包括严禁贪腐，严禁泄露工资等。一般指禁止透漏工资，触犯此条开除。</span><br><span class="line"><span class="number">8000</span>——网管</span><br><span class="line">鹅厂内部电话，电脑问题找<span class="number">8000</span>，密码忘了找<span class="number">8000</span>，RTX登不了找<span class="number">8000</span>……</span><br><span class="line"><span class="number">4</span>、渣浪——新浪</span><br><span class="line">新浪人称渣浪人人都知道，当然这么渣的名字就不是自称得来的了，而是A站和B站网友对新浪视频的称号，起因是up主使用外链投稿曾多次被新浪审核但又无故删除，使得UP主们抓狂，从此就有了“战渣浪”的定义。</span><br><span class="line">毕浪——离职员工组织</span><br><span class="line">从新浪毕业的人，和碧浪同音。</span><br><span class="line"><span class="number">5</span>、猪厂——网易</span><br><span class="line">这个名字内部人基本不用，也是属于外面人叫得比较多一点，起源是网易CEO丁磊在之前养过一段时间的猪，所以就这样被传开了。具有<span class="number">1</span><span class="number">-5</span>工作经验的，面对目前流行的技术不知从何下手，需要突破技术瓶颈的可以加群。在公司待久了，过得很安逸，但跳槽时面试碰壁。需要在短时间内进修、跳槽拿高薪的可以加群。如果没有工作经验，但基础非常扎实，对java工作机制，常用设计思想，常用java开发框架掌握熟练的可以加群。java架构群：<span class="number">591240817</span> 一起交流。</span><br><span class="line">离易、妖鹿山——离职员工组织</span><br><span class="line">离易的意思就是离开网易，和离异同音，妖鹿山同音<span class="number">163</span>，是网易的域名。</span><br><span class="line"><span class="number">6</span>、狐厂——搜狐</span><br><span class="line">搜狐的吉祥物是一只红色大尾巴的小狐狸，所以被叫做狐厂，不过对搜狐的人使用花名的时间并不多。</span><br><span class="line"><span class="number">7</span>、狗厂——京东</span><br><span class="line">由来：为了和天猫打一场硬架，<span class="number">2013</span>年<span class="number">3</span>月<span class="number">30</span>日，京东高调地更换域名、logo及VI系统,随之,一只名为“Joy”的金属小狗也空降互联网，于是在电商领域，阿里巴巴和京东的交战也可以被称为“猫狗大战”。</span><br><span class="line">东京不热——离职员工组织</span><br><span class="line">京东，东京，东京热，东京不热。</span><br><span class="line"><span class="number">8</span>、绿厂、数字公司——奇虎<span class="number">360</span></span><br><span class="line">由来：绿厂名字的带来是<span class="number">360</span>的Logo颜色，不过OPPO也是绿色的Logo所以也被叫做绿厂，但是<span class="number">360</span>更加出名的花名是数字公司，因为<span class="number">360</span>嘛。</span><br><span class="line"><span class="number">9</span>、杂粮、粗粮、粮厂——小米</span><br><span class="line">由来：杂粮名字的由来是<span class="number">360</span>周鸿祎<span class="number">2012</span>年和雷军在微博上打口水战而来，而后又被传播为粗粮和粮厂。</span><br><span class="line">小米粒——小米离职员工组织</span><br><span class="line"><span class="number">10</span>、盛斗士——盛大离职员工组织</span><br><span class="line">据说在盛大工作过<span class="number">1</span><span class="number">-2</span>年叫盛斗士;<span class="number">3</span><span class="number">-5</span>年叫必盛客;<span class="number">6</span><span class="number">-9</span>年叫斗战盛佛，<span class="number">10</span>年以上叫齐天大盛。</span><br><span class="line">消失的巨人——巨人离职员工组织</span><br><span class="line">旧金山——金山离职员工组织</span><br><span class="line">老友记——人人网离职员工组织</span><br><span class="line">这个名字源于公司附近的一家餐馆，以及人人的社交属性。</span><br><span class="line">驼厂——去哪儿</span><br><span class="line">来由：去哪儿的logo演变过来的。</span><br><span class="line">鸟厂、蜂厂——迅雷</span><br><span class="line">来由：迅雷公司的主打产品迅雷下载，其Logo为一只蜂鸟，不过被叫做鸟厂的情况居多。</span><br><span class="line">豆厂——豆瓣</span><br><span class="line">来由：取豆瓣公司的名字豆字。豆瓣的员工多数自称厂工。</span><br><span class="line">松鼠厂——UC</span><br><span class="line">来由：UC浏览器的logo里面有一只橙色的松鼠。</span><br><span class="line">海豚厂——携程</span><br><span class="line">来由：携程logo演变而来的。</span><br><span class="line">牛厂——途牛</span><br><span class="line">来由：logo演变而来的。</span><br><span class="line">马路公司——第七大道</span><br><span class="line">来由：大道不就是马路吗?</span><br></pre></td></tr></table></figure></p>
<blockquote>
<p>五、听懂中国 “外交行话”必备大全<br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">经常在电视上看到国家领导人和外国领导人亲切友好的会谈，他们的</span><br><span class="line"><span class="number">1</span>、亲切友好的交谈——字面意思；</span><br><span class="line"><span class="number">2</span>、坦率交谈——分歧很大，无法沟通；</span><br><span class="line"><span class="number">3</span>、交换了意见——会谈各说各的，没有达成协议；</span><br><span class="line"><span class="number">4</span>、充分交换了意见——双方无法达成协议，吵得厉害；</span><br><span class="line"><span class="number">5</span>、增进了双方的了解——双方分歧很大；</span><br><span class="line"><span class="number">6</span>、会谈是有益的——双方目标暂时相距甚远，能坐下来谈就很好；</span><br><span class="line"><span class="number">7</span>、我们持保留态度——我们拒绝同意；</span><br><span class="line"><span class="number">8</span>、尊重——不完全同意；</span><br><span class="line"><span class="number">9</span>、赞赏——不尽同意；</span><br><span class="line"><span class="number">10</span>、遗憾——不满；</span><br><span class="line"><span class="number">11</span>、不愉快——激烈的冲突；</span><br></pre></td></tr></table></figure></p>
</blockquote>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Redis常用操作命令]]></title>
      <url>http://www.jibaole.top/2018/01/06/Redis/</url>
      <content type="html"><![CDATA[<h2 id="Redis常用操作命令"><a href="#Redis常用操作命令" class="headerlink" title="Redis常用操作命令"></a>Redis常用操作命令</h2><p>官网地址(中文)：<a href="http://www.redis.cn/" target="_blank" rel="noopener">http://www.redis.cn/</a><br>桌面客户端：<a href="https://redisdesktop.com/download" target="_blank" rel="noopener">https://redisdesktop.com/download</a><br>入门教程：<a href="http://www.runoob.com/redis/redis-tutorial.html" target="_blank" rel="noopener">http://www.runoob.com/redis/redis-tutorial.html</a></p>
<a id="more"></a>
<blockquote>
<p>Redis是一个开源（BSD许可）的，内存中的数据结构存储系统，它可以用作数据库、缓存和消息中间件。 它支持多种类型的数据结构，如 字符串（strings）， 散列（hashes）， 列表（lists）， 集合（sets）， 有序集合（sorted sets） 与范围查询， bitmaps， hyperloglogs 和 地理空间（geospatial） 索引半径查询。 Redis 内置了 复制（replication），LUA脚本（Lua scripting）， LRU驱动事件（LRU eviction），事务（transactions） 和不同级别的 磁盘持久化（persistence）， 并通过 Redis哨兵（Sentinel）和自动 分区（Cluster）提供高可用性（high availability）。<br><img src="http://p22kojxuy.bkt.clouddn.com/Article/img/2018/01/redis.jpg" alt="Redis"></p>
</blockquote>
<h2 id="一、对value操作的命令"><a href="#一、对value操作的命令" class="headerlink" title="一、对value操作的命令"></a>一、对value操作的命令</h2><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">exists</span><span class="params">(key)</span></span>：确认一个key是否存在</span><br><span class="line"><span class="function"><span class="title">del</span><span class="params">(key)</span></span>：删除一个key</span><br><span class="line"><span class="function"><span class="title">type</span><span class="params">(key)</span></span>：返回值的类型</span><br><span class="line"><span class="function"><span class="title">keys</span><span class="params">(pattern)</span></span>：返回满足给定pattern的所有key</span><br><span class="line">randomkey：随机返回key空间的一个key</span><br><span class="line"><span class="function"><span class="title">rename</span><span class="params">(oldname, newname)</span></span>：将key由oldname重命名为newname，若newname存在则删除newname表示的key</span><br><span class="line">dbsize：返回当前数据库中key的数目</span><br><span class="line">expire：设定一个key的活动时间（s）</span><br><span class="line">ttl：获得一个key的活动时间</span><br><span class="line"><span class="function"><span class="title">select</span><span class="params">(index)</span></span>：按索引查询</span><br><span class="line"><span class="function"><span class="title">move</span><span class="params">(key, dbindex)</span></span>：将当前数据库中的key转移到有dbindex索引的数据库</span><br><span class="line">flushdb：删除当前选择数据库中的所有key</span><br><span class="line">flushall：删除所有数据库中的所有key</span><br></pre></td></tr></table></figure>
<h2 id="二、对String操作的命令"><a href="#二、对String操作的命令" class="headerlink" title="二、对String操作的命令"></a>二、对String操作的命令</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">set</span>(<span class="keyword">key</span>, <span class="keyword">value</span>)：给数据库中名称为<span class="keyword">key</span>的<span class="keyword">string</span>赋予值<span class="keyword">value</span></span><br><span class="line"><span class="keyword">get</span>(<span class="keyword">key</span>)：返回数据库中名称为<span class="keyword">key</span>的<span class="keyword">string</span>的<span class="keyword">value</span></span><br><span class="line">getset(<span class="keyword">key</span>, <span class="keyword">value</span>)：给名称为<span class="keyword">key</span>的<span class="keyword">string</span>赋予上一次的<span class="keyword">value</span></span><br><span class="line">mget(key1, key2,…, <span class="keyword">key</span> N)：返回库中多个<span class="keyword">string</span>（它们的名称为key1，key2…）的<span class="keyword">value</span></span><br><span class="line">setnx(<span class="keyword">key</span>, <span class="keyword">value</span>)：如果不存在名称为<span class="keyword">key</span>的<span class="keyword">string</span>，则向库中添加<span class="keyword">string</span>，名称为<span class="keyword">key</span>，值为<span class="keyword">value</span></span><br><span class="line">setex(<span class="keyword">key</span>, <span class="keyword">time</span>, <span class="keyword">value</span>)：向库中添加<span class="keyword">string</span>（名称为<span class="keyword">key</span>，值为<span class="keyword">value</span>）同时，设定过期时间<span class="keyword">time</span></span><br><span class="line">mset(key1, value1, key2, value2,…<span class="keyword">key</span> N, <span class="keyword">value</span> N)：同时给多个<span class="keyword">string</span>赋值，名称为<span class="keyword">key</span> i的<span class="keyword">string</span>赋值<span class="keyword">value</span> i</span><br><span class="line">msetnx(key1, value1, key2, value2,…<span class="keyword">key</span> N, <span class="keyword">value</span> N)：如果所有名称为<span class="keyword">key</span> i的<span class="keyword">string</span>都不存在，则向库中添加<span class="keyword">string</span>，名称<span class="keyword">key</span> i赋值为<span class="keyword">value</span> i</span><br><span class="line">incr(<span class="keyword">key</span>)：名称为<span class="keyword">key</span>的<span class="keyword">string</span>增<span class="number">1</span>操作</span><br><span class="line">incrby(<span class="keyword">key</span>, <span class="built_in">integer</span>)：名称为<span class="keyword">key</span>的<span class="keyword">string</span>增加<span class="built_in">integer</span></span><br><span class="line">decr(<span class="keyword">key</span>)：名称为<span class="keyword">key</span>的<span class="keyword">string</span>减<span class="number">1</span>操作</span><br><span class="line">decrby(<span class="keyword">key</span>, <span class="built_in">integer</span>)：名称为<span class="keyword">key</span>的<span class="keyword">string</span>减少<span class="built_in">integer</span></span><br><span class="line">append(<span class="keyword">key</span>, <span class="keyword">value</span>)：名称为<span class="keyword">key</span>的<span class="keyword">string</span>的值附加<span class="keyword">value</span></span><br><span class="line"><span class="keyword">substr</span>(<span class="keyword">key</span>, <span class="keyword">start</span>, <span class="keyword">end</span>)：返回名称为<span class="keyword">key</span>的<span class="keyword">string</span>的<span class="keyword">value</span>的子串</span><br></pre></td></tr></table></figure>
<h2 id="三、对List操作的命令"><a href="#三、对List操作的命令" class="headerlink" title="三、对List操作的命令"></a>三、对List操作的命令</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">rpush(key, value)：在名称为key的list尾添加一个值为value的元素</span><br><span class="line">lpush(key, value)：在名称为key的list头添加一个值为value的 元素</span><br><span class="line">llen(key)：返回名称为key的list的长度</span><br><span class="line">lrange(key, <span class="keyword">start</span>, <span class="keyword">end</span>)：返回名称为<span class="keyword">key</span>的<span class="keyword">list</span>中<span class="keyword">start</span>至<span class="keyword">end</span>之间的元素（下标从<span class="number">0</span>开始，下同）</span><br><span class="line"><span class="keyword">ltrim</span>(<span class="keyword">key</span>, <span class="keyword">start</span>, <span class="keyword">end</span>)：截取名称为<span class="keyword">key</span>的<span class="keyword">list</span>，保留<span class="keyword">start</span>至<span class="keyword">end</span>之间的元素</span><br><span class="line">lindex(<span class="keyword">key</span>, <span class="keyword">index</span>)：返回名称为<span class="keyword">key</span>的<span class="keyword">list</span>中<span class="keyword">index</span>位置的元素</span><br><span class="line">lset(<span class="keyword">key</span>, <span class="keyword">index</span>, <span class="keyword">value</span>)：给名称为<span class="keyword">key</span>的<span class="keyword">list</span>中<span class="keyword">index</span>位置的元素赋值为<span class="keyword">value</span></span><br><span class="line">lrem(<span class="keyword">key</span>, <span class="keyword">count</span>, <span class="keyword">value</span>)：删除<span class="keyword">count</span>个名称为<span class="keyword">key</span>的<span class="keyword">list</span>中值为<span class="keyword">value</span>的元素。<span class="keyword">count</span>为<span class="number">0</span>，删除所有值为<span class="keyword">value</span>的元素，<span class="keyword">count</span>&gt;<span class="number">0</span>从 头至尾删除<span class="keyword">count</span>个值为<span class="keyword">value</span>的元素，<span class="keyword">count</span>&lt;<span class="number">0</span>从尾到头删除|<span class="keyword">count</span>|个值为<span class="keyword">value</span>的元素。 lpop(<span class="keyword">key</span>)：返回并删除名称为<span class="keyword">key</span>的<span class="keyword">list</span>中的首元素 rpop(<span class="keyword">key</span>)：返回并删除名称为<span class="keyword">key</span>的<span class="keyword">list</span>中的尾元素 blpop(key1, key2,… <span class="keyword">key</span> N, <span class="keyword">timeout</span>)：lpop命令的<span class="keyword">block</span>版本。即当<span class="keyword">timeout</span>为<span class="number">0</span>时，若遇到名称为<span class="keyword">key</span> i的<span class="keyword">list</span>不存在或该<span class="keyword">list</span>为空，则命令结束。如果<span class="keyword">timeout</span>&gt;<span class="number">0</span>，则遇到上述情况时，等待<span class="keyword">timeout</span>秒，如果问题没有解决，则对 keyi+<span class="number">1</span>开始的<span class="keyword">list</span>执行pop操作。</span><br><span class="line">brpop(key1, key2,… <span class="keyword">key</span> N, <span class="keyword">timeout</span>)：rpop的<span class="keyword">block</span>版本。参考上一命令。</span><br><span class="line">rpoplpush(srckey, dstkey)：返回并删除名称为srckey的<span class="keyword">list</span>的尾元素，并将该元素添加到名称为dstkey的<span class="keyword">list</span>的头部</span><br></pre></td></tr></table></figure>
<h2 id="四、对Set操作的命令"><a href="#四、对Set操作的命令" class="headerlink" title="四、对Set操作的命令"></a>四、对Set操作的命令</h2><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">sadd</span><span class="params">(key, member)</span></span>：向名称为key的set中添加元素member</span><br><span class="line"><span class="function"><span class="title">srem</span><span class="params">(key, member)</span></span> ：删除名称为key的set中的元素member</span><br><span class="line"><span class="function"><span class="title">spop</span><span class="params">(key)</span></span> ：随机返回并删除名称为key的set中一个元素</span><br><span class="line"><span class="function"><span class="title">smove</span><span class="params">(srckey, dstkey, member)</span></span> ：将member元素从名称为srckey的集合移到名称为dstkey的集合</span><br><span class="line"><span class="function"><span class="title">scard</span><span class="params">(key)</span></span> ：返回名称为key的set的基数</span><br><span class="line"><span class="function"><span class="title">sismember</span><span class="params">(key, member)</span></span> ：测试member是否是名称为key的set的元素</span><br><span class="line"><span class="function"><span class="title">sinter</span><span class="params">(key1, key2,…key N)</span></span> ：求交集</span><br><span class="line"><span class="function"><span class="title">sinterstore</span><span class="params">(dstkey, key1, key2,…key N)</span></span> ：求交集并将交集保存到dstkey的集合</span><br><span class="line"><span class="function"><span class="title">sunion</span><span class="params">(key1, key2,…key N)</span></span> ：求并集</span><br><span class="line"><span class="function"><span class="title">sunionstore</span><span class="params">(dstkey, key1, key2,…key N)</span></span> ：求并集并将并集保存到dstkey的集合</span><br><span class="line"><span class="function"><span class="title">sdiff</span><span class="params">(key1, key2,…key N)</span></span> ：求差集</span><br><span class="line"><span class="function"><span class="title">sdiffstore</span><span class="params">(dstkey, key1, key2,…key N)</span></span> ：求差集并将差集保存到dstkey的集合</span><br><span class="line"><span class="function"><span class="title">smembers</span><span class="params">(key)</span></span> ：返回名称为key的set的所有元素</span><br><span class="line"><span class="function"><span class="title">srandmember</span><span class="params">(key)</span></span> ：随机返回名称为key的set的一个元素</span><br></pre></td></tr></table></figure>
<h2 id="五、对zset（sorted-set）操作的命令"><a href="#五、对zset（sorted-set）操作的命令" class="headerlink" title="五、对zset（sorted set）操作的命令"></a>五、对zset（sorted set）操作的命令</h2><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">zadd(<span class="built_in">key</span>, score, <span class="built_in">member</span>)：向名称为<span class="built_in">key</span>的zset中添加元素<span class="built_in">member</span>，score用于排序。如果该元素已经存在，则根据score更新该元素的顺序。</span><br><span class="line">zrem(<span class="built_in">key</span>, <span class="built_in">member</span>) ：删除名称为<span class="built_in">key</span>的zset中的元素<span class="built_in">member</span></span><br><span class="line">zincrby(<span class="built_in">key</span>, increment, <span class="built_in">member</span>) ：如果在名称为<span class="built_in">key</span>的zset中已经存在元素<span class="built_in">member</span>，则该元素的score增加increment；否则向集合中添加该元素，其score的值为increment</span><br><span class="line">zrank(<span class="built_in">key</span>, <span class="built_in">member</span>) ：返回名称为<span class="built_in">key</span>的zset（元素已按score从小到大排序）中<span class="built_in">member</span>元素的<span class="built_in">rank</span>（即index，从<span class="number">0</span>开始），若没有<span class="built_in">member</span>元素，返回“nil”</span><br><span class="line">zrevrank(<span class="built_in">key</span>, <span class="built_in">member</span>) ：返回名称为<span class="built_in">key</span>的zset（元素已按score从大到小排序）中<span class="built_in">member</span>元素的<span class="built_in">rank</span>（即index，从<span class="number">0</span>开始），若没有<span class="built_in">member</span>元素，返回“nil”</span><br><span class="line">zrange(<span class="built_in">key</span>, start, end)：返回名称为<span class="built_in">key</span>的zset（元素已按score从小到大排序）中的index从start到end的所有元素</span><br><span class="line">zrevrange(<span class="built_in">key</span>, start, end)：返回名称为<span class="built_in">key</span>的zset（元素已按score从大到小排序）中的index从start到end的所有元素</span><br><span class="line">zrangebyscore(<span class="built_in">key</span>, <span class="built_in">min</span>, <span class="built_in">max</span>)：返回名称为<span class="built_in">key</span>的zset中score &gt;= <span class="built_in">min</span>且score &lt;= <span class="built_in">max</span>的所有元素 zcard(<span class="built_in">key</span>)：返回名称为<span class="built_in">key</span>的zset的基数 zscore(<span class="built_in">key</span>, element)：返回名称为<span class="built_in">key</span>的zset中元素element的score zremrangebyrank(<span class="built_in">key</span>, <span class="built_in">min</span>, <span class="built_in">max</span>)：删除名称为<span class="built_in">key</span>的zset中<span class="built_in">rank</span> &gt;= <span class="built_in">min</span>且<span class="built_in">rank</span> &lt;= <span class="built_in">max</span>的所有元素 zremrangebyscore(<span class="built_in">key</span>, <span class="built_in">min</span>, <span class="built_in">max</span>) ：删除名称为<span class="built_in">key</span>的zset中score &gt;= <span class="built_in">min</span>且score &lt;= <span class="built_in">max</span>的所有元素</span><br><span class="line">zunionstore / zinterstore(dstkeyN, key1,…,keyN, WEIGHTS w1,…wN, AGGREGATE SUM|MIN|MAX)：对N个zset求并集和交集，并将最后的集合保存在dstkeyN中。对于集合中每一个元素的score，在进行 AGGREGATE运算前，都要乘以对于的WEIGHT参数。如果没有提供WEIGHT，默认为<span class="number">1</span>。默认的AGGREGATE是SUM，即结果集合中元素 的score是所有集合对应元素进行SUM运算的值，而MIN和MAX是指，结果集合中元素的score是所有集合对应元素中最小值和最大值。</span><br></pre></td></tr></table></figure>
<h2 id="六、对Hash操作的命令"><a href="#六、对Hash操作的命令" class="headerlink" title="六、对Hash操作的命令"></a>六、对Hash操作的命令</h2><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">hset</span><span class="params">(key, field, value)</span></span>：向名称为key的hash中添加元素field&lt;—&gt;value</span><br><span class="line"><span class="function"><span class="title">hget</span><span class="params">(key, field)</span></span>：返回名称为key的hash中field对应的value</span><br><span class="line"><span class="function"><span class="title">hmget</span><span class="params">(key, field1, …,field N)</span></span>：返回名称为key的hash中field i对应的value</span><br><span class="line"><span class="function"><span class="title">hmset</span><span class="params">(key, field1, value1,…,field N, value N)</span></span>：向名称为key的hash中添加元素field i&lt;—&gt;value i</span><br><span class="line"><span class="function"><span class="title">hincrby</span><span class="params">(key, field, integer)</span></span>：将名称为key的hash中field的value增加integer</span><br><span class="line"><span class="function"><span class="title">hexists</span><span class="params">(key, field)</span></span>：名称为key的hash中是否存在键为field的域</span><br></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Markdown 编辑阅读器(效果)]]></title>
      <url>http://www.jibaole.top/2017/02/03/markdown-use/</url>
      <content type="html"><![CDATA[<p>我们理解您需要更便捷更高效的工具记录思想，整理笔记、知识，并将其中承载的价值传播给他人，<br><strong>Markdown</strong> 是我们给出的答案 —— 我们为记录思想和分享知识提供更专业的工具。 您可以使用Markdown~<br><a id="more"></a></p>
<hr>
<blockquote>
<ul>
<li>整理知识，学习笔记</li>
<li>发布日记，杂文，所见所想</li>
<li>撰写发布技术文稿（代码支持）</li>
<li>撰写发布学术论文（LaTeX 公式支持）</li>
</ul>
</blockquote>
<p><img src="https://www.zybuluo.com/static/img/logo.png" alt="cmd-markdown-logo"></p>
<p>除了您现在看到的这个 Cmd Markdown 在线版本，您还可以前往以下网址下载：</p>
<h3 id="Windows-Mac-Linux-全平台客户端"><a href="#Windows-Mac-Linux-全平台客户端" class="headerlink" title="Windows/Mac/Linux 全平台客户端"></a><a href="https://www.jibaole.com/" target="_blank" rel="noopener">Windows/Mac/Linux 全平台客户端</a></h3><blockquote>
<p>请保留此份 Cmd Markdown 的欢迎稿兼使用说明，如需撰写新稿件，点击顶部工具栏右侧的 <i class="icon-file"></i> <strong>新文稿</strong> 或者使用快捷键 <code>Ctrl+Alt+N</code>。</p>
</blockquote>
<hr>
<h2 id="什么是-Markdown"><a href="#什么是-Markdown" class="headerlink" title="什么是 Markdown"></a>什么是 Markdown</h2><p>Markdown 是一种方便记忆、书写的纯文本标记语言，用户可以使用这些标记符号以最小的输入代价生成极富表现力的文档：譬如您正在阅读的这份文档。它使用简单的符号标记不同的标题，分割不同的段落，<strong>粗体</strong> 或者 <em>斜体</em> 某些文字，更棒的是，它还可以</p>
<h3 id="1-制作一份待办事宜-Todo-列表"><a href="#1-制作一份待办事宜-Todo-列表" class="headerlink" title="1. 制作一份待办事宜 Todo 列表"></a>1. 制作一份待办事宜 <a href="https://www.jibaole.com/" target="_blank" rel="noopener">Todo 列表</a></h3><ul>
<li>[ ] 支持以 PDF 格式导出文稿</li>
<li>[ ] 改进 Cmd 渲染算法，使用局部渲染技术提高渲染效率</li>
<li>[x] 新增 Todo 列表功能</li>
<li>[x] 修复 LaTex 公式渲染问题</li>
<li>[x] 新增 LaTex 公式编号功能</li>
</ul>
<h3 id="2-书写一个质能守恒公式-LaTeX"><a href="#2-书写一个质能守恒公式-LaTeX" class="headerlink" title="2. 书写一个质能守恒公式[^LaTeX]"></a>2. 书写一个质能守恒公式[^LaTeX]</h3><p>$$E=mc^2$$</p>
<h3 id="3-高亮一段代码-code"><a href="#3-高亮一段代码-code" class="headerlink" title="3. 高亮一段代码[^code]"></a>3. 高亮一段代码[^code]</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@requires_authorization</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SomeClass</span>:</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="comment"># A comment</span></span><br><span class="line">    <span class="keyword">print</span> <span class="string">'hello world'</span></span><br></pre></td></tr></table></figure>
<h3 id="4-高效绘制-流程图"><a href="#4-高效绘制-流程图" class="headerlink" title="4. 高效绘制 流程图"></a>4. 高效绘制 <a href="https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown#7-流程图" target="_blank" rel="noopener">流程图</a></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">st=&gt;start: Start</span><br><span class="line">op=&gt;operation: Your Operation</span><br><span class="line">cond=&gt;condition: Yes or No?</span><br><span class="line">e=&gt;end</span><br><span class="line"></span><br><span class="line">st-&gt;op-&gt;cond</span><br><span class="line">cond(yes)-&gt;e</span><br><span class="line">cond(no)-&gt;op</span><br></pre></td></tr></table></figure>
<h3 id="5-高效绘制-序列图"><a href="#5-高效绘制-序列图" class="headerlink" title="5. 高效绘制 序列图"></a>5. 高效绘制 <a href="https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown#8-序列图" target="_blank" rel="noopener">序列图</a></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Alice-&gt;Bob: Hello Bob, how are you?</span><br><span class="line">Note right of Bob: Bob thinks</span><br><span class="line">Bob--&gt;Alice: I am good thanks!</span><br></pre></td></tr></table></figure>
<h3 id="6-高效绘制-甘特图"><a href="#6-高效绘制-甘特图" class="headerlink" title="6. 高效绘制 甘特图"></a>6. 高效绘制 <a href="https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown#9-甘特图" target="_blank" rel="noopener">甘特图</a></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">title 项目开发流程</span><br><span class="line">section 项目确定</span><br><span class="line">    需求分析       :a1, 2016-06-22, 3d</span><br><span class="line">    可行性报告     :after a1, 5d</span><br><span class="line">    概念验证       : 5d</span><br><span class="line">section 项目实施</span><br><span class="line">    概要设计      :2016-07-05  , 5d</span><br><span class="line">    详细设计      :2016-07-08, 10d</span><br><span class="line">    编码          :2016-07-15, 10d</span><br><span class="line">    测试          :2016-07-22, 5d</span><br><span class="line">section 发布验收</span><br><span class="line">    发布: 2d</span><br><span class="line">    验收: 3d</span><br></pre></td></tr></table></figure>
<h3 id="7-绘制表格"><a href="#7-绘制表格" class="headerlink" title="7. 绘制表格"></a>7. 绘制表格</h3><table>
<thead>
<tr>
<th>项目</th>
<th style="text-align:right">价格</th>
<th style="text-align:center">数量</th>
</tr>
</thead>
<tbody>
<tr>
<td>计算机</td>
<td style="text-align:right">\$1600</td>
<td style="text-align:center">5</td>
</tr>
<tr>
<td>手机</td>
<td style="text-align:right">\$12</td>
<td style="text-align:center">12</td>
</tr>
<tr>
<td>管线</td>
<td style="text-align:right">\$1</td>
<td style="text-align:center">234</td>
</tr>
</tbody>
</table>
<h3 id="8-更详细语法说明"><a href="#8-更详细语法说明" class="headerlink" title="8. 更详细语法说明"></a>8. 更详细语法说明</h3><p>想要查看更详细的语法说明，可以参考我们准备的 <a href="https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown" target="_blank" rel="noopener">Cmd Markdown 简明语法手册</a>，进阶用户可以参考 <a href="https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown#cmd-markdown-高阶语法手册" target="_blank" rel="noopener">Cmd Markdown 高阶语法手册</a> 了解更多高级功能。</p>
<p>总而言之，不同于其它 <em>所见即所得</em> 的编辑器：你只需使用键盘专注于书写文本内容，就可以生成印刷级的排版格式，省却在键盘和工具栏之间来回切换，调整内容和格式的麻烦。<strong>Markdown 在流畅的书写和印刷级的阅读体验之间找到了平衡。</strong> 目前它已经成为世界上最大的技术分享网站 GitHub 和 技术问答网站 StackOverFlow 的御用书写格式。</p>
<hr>
<h2 id="什么是-Cmd-Markdown"><a href="#什么是-Cmd-Markdown" class="headerlink" title="什么是 Cmd Markdown"></a>什么是 Cmd Markdown</h2><p>您可以使用很多工具书写 Markdown，但是 Cmd Markdown 是这个星球上我们已知的、最好的 Markdown 工具——没有之一 ：）因为深信文字的力量，所以我们和你一样，对流畅书写，分享思想和知识，以及阅读体验有极致的追求，我们把对于这些诉求的回应整合在 Cmd Markdown，并且一次，两次，三次，乃至无数次地提升这个工具的体验，最终将它演化成一个 <strong>编辑/发布/阅读</strong> Markdown 的在线平台——您可以在任何地方，任何系统/设备上管理这里的文字。</p>
<h3 id="1-实时同步预览"><a href="#1-实时同步预览" class="headerlink" title="1. 实时同步预览"></a>1. 实时同步预览</h3><p>我们将 Cmd Markdown 的主界面一分为二，左边为<strong>编辑区</strong>，右边为<strong>预览区</strong>，在编辑区的操作会实时地渲染到预览区方便查看最终的版面效果，并且如果你在其中一个区拖动滚动条，我们有一个巧妙的算法把另一个区的滚动条同步到等价的位置，超酷！</p>
<h3 id="2-编辑工具栏"><a href="#2-编辑工具栏" class="headerlink" title="2. 编辑工具栏"></a>2. 编辑工具栏</h3><p>也许您还是一个 Markdown 语法的新手，在您完全熟悉它之前，我们在 <strong>编辑区</strong> 的顶部放置了一个如下图所示的工具栏，您可以使用鼠标在工具栏上调整格式，不过我们仍旧鼓励你使用键盘标记格式，提高书写的流畅度。</p>
<p><img src="https://www.zybuluo.com/static/img/toolbar-editor.png" alt="tool-editor"></p>
<h3 id="3-编辑模式"><a href="#3-编辑模式" class="headerlink" title="3. 编辑模式"></a>3. 编辑模式</h3><p>完全心无旁骛的方式编辑文字：点击 <strong>编辑工具栏</strong> 最右侧的拉伸按钮或者按下 <code>Ctrl + M</code>，将 Cmd Markdown 切换到独立的编辑模式，这是一个极度简洁的写作环境，所有可能会引起分心的元素都已经被挪除，超清爽！</p>
<h3 id="4-实时的云端文稿"><a href="#4-实时的云端文稿" class="headerlink" title="4. 实时的云端文稿"></a>4. 实时的云端文稿</h3><p>为了保障数据安全，Cmd Markdown 会将您每一次击键的内容保存至云端，同时在 <strong>编辑工具栏</strong> 的最右侧提示 <code>已保存</code> 的字样。无需担心浏览器崩溃，机器掉电或者地震，海啸——在编辑的过程中随时关闭浏览器或者机器，下一次回到 Cmd Markdown 的时候继续写作。</p>
<h3 id="5-离线模式"><a href="#5-离线模式" class="headerlink" title="5. 离线模式"></a>5. 离线模式</h3><p>在网络环境不稳定的情况下记录文字一样很安全！在您写作的时候，如果电脑突然失去网络连接，Cmd Markdown 会智能切换至离线模式，将您后续键入的文字保存在本地，直到网络恢复再将他们传送至云端，即使在网络恢复前关闭浏览器或者电脑，一样没有问题，等到下次开启 Cmd Markdown 的时候，她会提醒您将离线保存的文字传送至云端。简而言之，我们尽最大的努力保障您文字的安全。</p>
<h3 id="6-管理工具栏"><a href="#6-管理工具栏" class="headerlink" title="6. 管理工具栏"></a>6. 管理工具栏</h3><p>为了便于管理您的文稿，在 <strong>预览区</strong> 的顶部放置了如下所示的 <strong>管理工具栏</strong>：</p>
<p><img src="https://www.zybuluo.com/static/img/toolbar-manager.jpg" alt="tool-manager"></p>
<p>通过管理工具栏可以：</p>
<p><i class="icon-share"></i> 发布：将当前的文稿生成固定链接，在网络上发布，分享<br><i class="icon-file"></i> 新建：开始撰写一篇新的文稿<br><i class="icon-trash"></i> 删除：删除当前的文稿<br><i class="icon-cloud"></i> 导出：将当前的文稿转化为 Markdown 文本或者 Html 格式，并导出到本地<br><i class="icon-reorder"></i> 列表：所有新增和过往的文稿都可以在这里查看、操作<br><i class="icon-pencil"></i> 模式：切换 普通/Vim/Emacs 编辑模式</p>
<h3 id="7-阅读工具栏"><a href="#7-阅读工具栏" class="headerlink" title="7. 阅读工具栏"></a>7. 阅读工具栏</h3><p><img src="https://www.zybuluo.com/static/img/toolbar-reader.jpg" alt="tool-manager"></p>
<p>通过 <strong>预览区</strong> 右上角的 <strong>阅读工具栏</strong>，可以查看当前文稿的目录并增强阅读体验。</p>
<p>工具栏上的五个图标依次为：</p>
<p><i class="icon-list"></i> 目录：快速导航当前文稿的目录结构以跳转到感兴趣的段落<br><i class="icon-chevron-sign-left"></i> 视图：互换左边编辑区和右边预览区的位置<br><i class="icon-adjust"></i> 主题：内置了黑白两种模式的主题，试试 <strong>黑色主题</strong>，超炫！<br><i class="icon-desktop"></i> 阅读：心无旁骛的阅读模式提供超一流的阅读体验<br><i class="icon-fullscreen"></i> 全屏：简洁，简洁，再简洁，一个完全沉浸式的写作和阅读环境</p>
<h3 id="8-阅读模式"><a href="#8-阅读模式" class="headerlink" title="8. 阅读模式"></a>8. 阅读模式</h3><p>在 <strong>阅读工具栏</strong> 点击 <i class="icon-desktop"></i> 或者按下 <code>Ctrl+Alt+M</code> 随即进入独立的阅读模式界面，我们在版面渲染上的每一个细节：字体，字号，行间距，前背景色都倾注了大量的时间，努力提升阅读的体验和品质。</p>
<h3 id="9-标签、分类和搜索"><a href="#9-标签、分类和搜索" class="headerlink" title="9. 标签、分类和搜索"></a>9. 标签、分类和搜索</h3><p>在编辑区任意行首位置输入以下格式的文字可以标签当前文档：</p>
<p>标签： 未分类</p>
<p>标签以后的文稿在【文件列表】（Ctrl+Alt+F）里会按照标签分类，用户可以同时使用键盘或者鼠标浏览查看，或者在【文件列表】的搜索文本框内搜索标题关键字过滤文稿，如下图所示：</p>
<p><img src="https://www.zybuluo.com/static/img/file-list.png" alt="file-list"></p>
<h3 id="10-文稿发布和分享"><a href="#10-文稿发布和分享" class="headerlink" title="10. 文稿发布和分享"></a>10. 文稿发布和分享</h3><p>在您使用 Cmd Markdown 记录，创作，整理，阅读文稿的同时，我们不仅希望它是一个有力的工具，更希望您的思想和知识通过这个平台，连同优质的阅读体验，将他们分享给有相同志趣的人，进而鼓励更多的人来到这里记录分享他们的思想和知识，尝试点击 <i class="icon-share"></i> (Ctrl+Alt+P) 发布这份文档给好友吧！</p>
<hr>
<p>再一次感谢您花费时间阅读这份欢迎稿，点击 <i class="icon-file"></i> (Ctrl+Alt+N) 开始撰写新的文稿吧！祝您在这里记录、阅读、分享愉快！</p>
<p>[^LaTeX]: 支持 <strong>LaTeX</strong> 编辑显示支持，例如：$\sum_{i=1}^n a_i=0$， 访问 <a href="http://meta.math.stackexchange.com/questions/5020/mathjax-basic-tutorial-and-quick-reference" target="_blank" rel="noopener">MathJax</a> 参考更多使用方法。</p>
<p>[^code]: 代码高亮功能支持包括 Java, Python, JavaScript 在内的，<strong>四十一</strong>种主流编程语言。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Java爬虫框架WebMagic的使用总结]]></title>
      <url>http://www.jibaole.top/2016/12/06/WebMagic/</url>
      <content type="html"><![CDATA[<p>   最近，项目做一个公司新闻网站，分为PC&amp;移动端(h5)，数据来源是从HSZX与huanqiu2个网站爬取，主要使用Java编写<br>的WebMagic作为爬虫框架，数据分为批量抓取、增量抓取，批量抓当前所有历史数据，增量需要每10分钟定时抓取一次，<br>由于从2个网站抓取，并且频道很多，数据量大，更新频繁；开发过程中遇到很多的坑，今天腾出时间，感觉有必要做以总结。</p>
<a id="more"></a>
<h2 id="工具说明"><a href="#工具说明" class="headerlink" title="工具说明"></a>工具说明</h2><ul>
<li>1、WebMagic是一个简单灵活的爬虫框架。基于WebMagic，你可以快速开发出一个高效、易维护的爬虫。<ul>
<li>官网地址：<a href="http://webmagic.io/" target="_blank" rel="noopener">http://webmagic.io/</a></li>
<li>文档说明：<a href="http://webmagic.io/docs/zh/" target="_blank" rel="noopener">http://webmagic.io/docs/zh/</a></li>
</ul>
</li>
<li>2、jsoup是Java的一个html解析工作，解析性能很不错。<ul>
<li>文档地址：<a href="http://www.open-open.com/jsoup/" target="_blank" rel="noopener">http://www.open-open.com/jsoup/</a></li>
</ul>
</li>
<li>3、Jdiy一款超轻量的java极速开发框架，javaEE/javaSE环境均适用，便捷的数据库CRUD操作API。支持各大主流数据库。<ul>
<li>官网地址：<a href="http://www.jdiy.org/jdiy.jd" target="_blank" rel="noopener">http://www.jdiy.org/jdiy.jd</a></li>
</ul>
</li>
</ul>
<h2 id="使用到的技术，如下"><a href="#使用到的技术，如下" class="headerlink" title="使用到的技术，如下"></a>使用到的技术，如下</h2> <figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">WebMagic作为爬虫框架、httpclient作为获取网页工具、<span class="keyword">Jsoup作为分析页面定位抓取内容、</span></span><br><span class="line"><span class="keyword">ExecutorService线程池作为定时增量抓取、Jdiy作为持久层框架</span></span><br></pre></td></tr></table></figure>
<h2 id="项目简介"><a href="#项目简介" class="headerlink" title="项目简介"></a>项目简介</h2><h3 id="历史抓取代码-忽略，可以查看源码"><a href="#历史抓取代码-忽略，可以查看源码" class="headerlink" title="历史抓取代码(忽略，可以查看源码)"></a>历史抓取代码(忽略，可以查看源码)</h3><h3 id="增量抓取代码，如下-忽略，可以查看源码"><a href="#增量抓取代码，如下-忽略，可以查看源码" class="headerlink" title="增量抓取代码，如下((忽略，可以查看源码))"></a>增量抓取代码，如下((忽略，可以查看源码))</h3><pre><code>&gt; 说明：增量每10分钟执行一次，每次只抓取最新一页数据，根据增量标识(上一次第一条新闻news_id)，
&gt; 存在相同news_id或一页爬完就终止抓取。
</code></pre><h3 id="定时抓取，配置如下"><a href="#定时抓取，配置如下" class="headerlink" title="定时抓取，配置如下"></a>定时抓取，配置如下</h3><blockquote>
<p>web.xml重配置监听<br>   <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;!-- 添加：增量数据抓取监听 --&gt;</span><br><span class="line">&lt;listener&gt;</span><br><span class="line">    &lt;listener-class&gt;com.spider.utils.AutoRun&lt;/listener-class&gt;</span><br><span class="line">&lt;/listener&gt;</span><br></pre></td></tr></table></figure></p>
<p>定时代码</p>
</blockquote>
   <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">package com.spider.utils;</span><br><span class="line"></span><br><span class="line">import java.util.concurrent.Executors;</span><br><span class="line">import java.util.concurrent.ScheduledExecutorService;</span><br><span class="line">import java.util.concurrent.TimeUnit;</span><br><span class="line">import javax.servlet.ServletContextEvent;</span><br><span class="line">import javax.servlet.ServletContextListener;</span><br><span class="line">import com.spider.huanqiu.timer.HQJob1;</span><br><span class="line">import com.spider.huanqiu.timer.HQJob2;</span><br><span class="line">import com.spider.huanqiu.timer.HQJob3;</span><br><span class="line">import com.spider.huanqiu.timer.HQJob4;</span><br><span class="line">import com.spider.huasheng.timer.HSJob1;</span><br><span class="line">import com.spider.huasheng.timer.HSJob2;</span><br><span class="line">/**</span><br><span class="line"> * 描        述：监听增量抓取Job</span><br><span class="line"> * 创建时间：2016-11-4</span><br><span class="line"> * @author Jibaole</span><br><span class="line"> */</span><br><span class="line">public class AutoRun implements ServletContextListener &#123;</span><br><span class="line"></span><br><span class="line">  public void contextInitialized(ServletContextEvent event) &#123;</span><br><span class="line">	  ScheduledExecutorService scheduExec =  Executors.newScheduledThreadPool(6);</span><br><span class="line">    /*</span><br><span class="line">     * 这里开始循环执行 HSJob()方法了</span><br><span class="line">     * scheduleAtFixedRate(param1, param2,param3)这个函数的三个参数的意思分别是：</span><br><span class="line">     *    param1：你要执行的方法；param2：延迟执行的时间，单位毫秒；param3：循环间隔时间，单位毫秒</span><br><span class="line">     */</span><br><span class="line">    scheduExec.scheduleAtFixedRate(new HSJob1(), 1*1000*60,1000*60*10,TimeUnit.MILLISECONDS);  //延迟1分钟，设置没10分钟执行一次</span><br><span class="line">    scheduExec.scheduleAtFixedRate(new HSJob2(), 3*1000*60,1000*60*10,TimeUnit.MILLISECONDS);  //延迟3分钟，设置没10分钟执行一次</span><br><span class="line"></span><br><span class="line">    scheduExec.scheduleAtFixedRate(new HQJob1(), 5*1000*60,1000*60*10,TimeUnit.MILLISECONDS);  //延迟5分钟，设置没10分钟执行一次</span><br><span class="line">    scheduExec.scheduleAtFixedRate(new HQJob2(), 7*1000*60,1000*60*10,TimeUnit.MILLISECONDS);  //延迟7分钟，设置没10分钟执行一次</span><br><span class="line">    scheduExec.scheduleAtFixedRate(new HQJob3(), 9*1000*60,1000*60*14,TimeUnit.MILLISECONDS);  //延迟9分钟，设置没10分钟执行一次</span><br><span class="line">    scheduExec.scheduleAtFixedRate(new HQJob4(), 11*1000*60,1000*60*10,TimeUnit.MILLISECONDS);  //延迟11分钟，设置没10分钟执行一次</span><br><span class="line">  &#125;</span><br><span class="line">  public void contextDestroyed(ServletContextEvent event) &#123;</span><br><span class="line">	  System.out.println(&quot;=======timer销毁==========&quot;);</span><br><span class="line">    //timer.cancel();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>具体执行业务(举一个例子)</p>
</blockquote>
   <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line">package com.spider.huasheng.timer;</span><br><span class="line"></span><br><span class="line">import java.util.ArrayList;</span><br><span class="line">import java.util.List;</span><br><span class="line">import java.util.TimerTask;</span><br><span class="line">import com.spider.huasheng.task.HSTaskDao;</span><br><span class="line">import com.spider.huasheng.task.HSTaskDao1;</span><br><span class="line">import com.spider.huasheng.task.HSTaskDao2;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 描        述：国际、社会、国内、评论等频道定时任务</span><br><span class="line"> * 创建时间：2016-11-9</span><br><span class="line"> * @author Jibaole</span><br><span class="line"> */</span><br><span class="line">public class HSJob1 implements Runnable&#123;</span><br><span class="line">    @Override</span><br><span class="line">    public void run() &#123;</span><br><span class="line">        System.out.println(&quot;======&gt;&gt;&gt;开始：xxx-任务1====&quot;);</span><br><span class="line">  try &#123;</span><br><span class="line">      runNews();</span><br><span class="line">        runNews1();</span><br><span class="line">        runNews2();</span><br><span class="line">     &#125; catch (Throwable t) &#123;</span><br><span class="line">         System.out.println(&quot;Error&quot;);</span><br><span class="line">     &#125;</span><br><span class="line">       System.out.println(&quot;======xxx-任务1&gt;&gt;&gt;结束！！！====&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">    /**</span><br><span class="line">	 * 抓取-新闻 频道列表</span><br><span class="line">	 */</span><br><span class="line">	public void runNews()&#123;</span><br><span class="line">		List&lt;String&gt; strList=new ArrayList&lt;String&gt;();</span><br><span class="line">		/**##############&gt;&gt;&gt;16、国际&lt;&lt;&lt;##################*/</span><br><span class="line">		//国际视野</span><br><span class="line">	    strList.add(&quot;http://xxx/class/2199.html?pindao=国际&quot;);</span><br><span class="line"></span><br><span class="line">	    /**##############&gt;&gt;&gt;17、社会&lt;&lt;&lt;##################*/</span><br><span class="line">		//社会</span><br><span class="line">		strList.add(&quot;http://xxx/class/2200.html?pindao=社会&quot;);</span><br><span class="line"></span><br><span class="line">		/**##############&gt;&gt;&gt;18、国内&lt;&lt;&lt;##################*/</span><br><span class="line">		//国内动态</span><br><span class="line">		strList.add(&quot;http://xxx/class/1922.html?pindao=国内&quot;);</span><br><span class="line">		HQNewsTaskDao.runNewsList(strList);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	/**</span><br><span class="line">	 * 抓取-新闻 频道列表</span><br><span class="line">	 */</span><br><span class="line">	public void runNews1()&#123;</span><br><span class="line">		List&lt;String&gt; strList=new ArrayList&lt;String&gt;();</span><br><span class="line">		/**##############&gt;&gt;&gt;19、评论&lt;&lt;&lt;##################*/</span><br><span class="line">		//华声视点</span><br><span class="line">		strList.add(&quot;http://xxx/class/709.html?pindao=评论&quot;);</span><br><span class="line">		//财经观察</span><br><span class="line">		strList.add(&quot;http://xxx/class/2557.html?pindao=评论&quot;);</span><br><span class="line">		/**##############&gt;&gt;&gt;20、军事&lt;&lt;&lt;##################*/</span><br><span class="line">		//军事</span><br><span class="line">		strList.add(&quot;http://xxx/class/2201.html?pindao=军事&quot;);</span><br><span class="line">		HQNewsTaskDao.runNewsList(strList);</span><br><span class="line">	&#125;</span><br><span class="line">	/**</span><br><span class="line">	 * 抓取-新闻 频道列表</span><br><span class="line">	 */</span><br><span class="line">	public void runNews2()&#123;</span><br><span class="line">		List&lt;String&gt; strList=new ArrayList&lt;String&gt;();</span><br><span class="line">		/**##############&gt;&gt;&gt;24、财经&lt;&lt;&lt;##################*/</span><br><span class="line">		//财讯</span><br><span class="line">		strList.add(&quot;http://xxx/class/2353.html?pindao=财经&quot;);</span><br><span class="line">		//经济观察</span><br><span class="line">		strList.add(&quot;http://xxx/class/2348.html?pindao=财经&quot;);</span><br><span class="line">		/**##############&gt;&gt;&gt;30、人文&lt;&lt;&lt;##################*/</span><br><span class="line">		//历史上的今天</span><br><span class="line">		strList.add(&quot;http://xxx/class/1313.html?pindao=人文&quot;);</span><br><span class="line">		//正史风云</span><br><span class="line">		strList.add(&quot;http://xxx/class/1362.html?pindao=人文&quot;);</span><br><span class="line">		HSTaskDao2.runNewsList(strList);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="遇到的坑"><a href="#遇到的坑" class="headerlink" title="遇到的坑"></a>遇到的坑</h2><h3 id="增量抓取经常遇到这2个异常，如下"><a href="#增量抓取经常遇到这2个异常，如下" class="headerlink" title="增量抓取经常遇到这2个异常，如下"></a>增量抓取经常遇到这2个异常，如下</h3><blockquote>
<p>抓取超时：Jsoup 获取页面内容，替换为 httpclient获取，Jsoup去解析<br>页面gzip异常（这个问题特别坑，导致历史、增量抓取数据严重缺失，线上一直有问题）<br>   <img src="http://img.blog.csdn.net/20161109181113123?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt="gzip异常" title="Bug截图"></p>
</blockquote>
<ul>
<li><p>解决方案：</p>
<blockquote>
<p>增加：Site..addHeader(“Accept-Encoding”, “/“)</p>
<p>这个是WebMagic的框架源码有点小Bug,如果没有设置Header，默认页面Accept-Encoding为：gzip</p>
</blockquote>
<p>   <img src="http://img.blog.csdn.net/20161109181725350?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt="源码截图" title="源码截图"></p>
</li>
</ul>
<h3 id="定时抓取"><a href="#定时抓取" class="headerlink" title="定时抓取"></a>定时抓取</h3><pre><code>&gt; 由ScheduledExecutorService多线程并行执行任务，替换Timer单线程串行

&gt;  原方式代码，如下：

<figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.spider.utils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Timer;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletContextEvent;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletContextListener;</span><br><span class="line"><span class="keyword">import</span> com.spider.huanqiu.timer.HQJob1;</span><br><span class="line"><span class="keyword">import</span> com.spider.huanqiu.timer.HQJob2;</span><br><span class="line"><span class="keyword">import</span> com.spider.huanqiu.timer.HQJob3;</span><br><span class="line"><span class="keyword">import</span> com.spider.huanqiu.timer.HQJob4;</span><br><span class="line"><span class="keyword">import</span> com.spider.huasheng.timer.HSJob1;</span><br><span class="line"><span class="keyword">import</span> com.spider.huasheng.timer.HSJob2;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 描    述：监听增量抓取Job</span></span><br><span class="line"><span class="comment"> * 创建时间：2016-11-4</span></span><br><span class="line"><span class="comment"> * @author Jibaole</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AutoRun</span> <span class="keyword"><span class="keyword">implements</span> <span class="type">ServletContextListener</span></span> </span>&#123;</span><br><span class="line">  <span class="comment">//HS-job</span></span><br><span class="line">  <span class="keyword">private</span> Timer hsTimer1 = <span class="literal">null</span>;</span><br><span class="line">  <span class="keyword">private</span> Timer hsTimer2 = <span class="literal">null</span>;</span><br><span class="line">  <span class="comment">//HQZX-job</span></span><br><span class="line">  <span class="keyword">private</span> Timer hqTimer1 = <span class="literal">null</span>;</span><br><span class="line">  <span class="keyword">private</span> Timer hqTimer2 = <span class="literal">null</span>;</span><br><span class="line">  <span class="keyword">private</span> Timer hqTimer3 = <span class="literal">null</span>;</span><br><span class="line">  <span class="keyword">private</span> Timer hqTimer4 = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> void contextInitialized(ServletContextEvent event) &#123;</span><br><span class="line">    hsTimer1 = <span class="keyword">new</span> <span class="type">Timer</span>(<span class="literal">true</span>);</span><br><span class="line">    hsTimer2 = <span class="keyword">new</span> <span class="type">Timer</span>(<span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">    hqTimer1 = <span class="keyword">new</span> <span class="type">Timer</span>(<span class="literal">true</span>);</span><br><span class="line">    hqTimer2 = <span class="keyword">new</span> <span class="type">Timer</span>(<span class="literal">true</span>);</span><br><span class="line">    hqTimer3 = <span class="keyword">new</span> <span class="type">Timer</span>(<span class="literal">true</span>);</span><br><span class="line">    hqTimer4 = <span class="keyword">new</span> <span class="type">Timer</span>(<span class="literal">true</span>);</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * 这里开始循环执行 HSJob()方法了</span></span><br><span class="line"><span class="comment">     * schedule(param1, param2,param3)这个函数的三个参数的意思分别是：</span></span><br><span class="line"><span class="comment">     *    param1：你要执行的方法；param2：延迟执行的时间，单位毫秒；param3：循环间隔时间，单位毫秒</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    hsTimer1.scheduleAtFixedRate(<span class="keyword">new</span> <span class="type">HSJob1</span>(), <span class="number">1</span>*<span class="number">1000</span>*<span class="number">60</span>,<span class="number">1000</span>*<span class="number">60</span>*<span class="number">10</span>);  <span class="comment">//延迟1分钟，设置没10分钟执行一次</span></span><br><span class="line">    hsTimer2.scheduleAtFixedRate(<span class="keyword">new</span> <span class="type">HSJob2</span>(), <span class="number">3</span>*<span class="number">1000</span>*<span class="number">60</span>,<span class="number">1000</span>*<span class="number">60</span>*<span class="number">10</span>);  <span class="comment">//延迟3分钟，设置没10分钟执行一次</span></span><br><span class="line"></span><br><span class="line">    hqTimer1.scheduleAtFixedRate(<span class="keyword">new</span> <span class="type">HQJob1</span>(), <span class="number">5</span>*<span class="number">1000</span>*<span class="number">60</span>,<span class="number">1000</span>*<span class="number">60</span>*<span class="number">10</span>);  <span class="comment">//延迟5分钟，设置没10分钟执行一次</span></span><br><span class="line">    hqTimer2.scheduleAtFixedRate(<span class="keyword">new</span> <span class="type">HQJob2</span>(), <span class="number">7</span>*<span class="number">1000</span>*<span class="number">60</span>,<span class="number">1000</span>*<span class="number">60</span>*<span class="number">10</span>);  <span class="comment">//延迟7分钟，设置没10分钟执行一次</span></span><br><span class="line">    hqTimer3.scheduleAtFixedRate(<span class="keyword">new</span> <span class="type">HQJob3</span>(), <span class="number">9</span>*<span class="number">1000</span>*<span class="number">60</span>,<span class="number">1000</span>*<span class="number">60</span>*<span class="number">10</span>);  <span class="comment">//延迟9分钟，设置没10分钟执行一次</span></span><br><span class="line">    hqTimer4.scheduleAtFixedRate(<span class="keyword">new</span> <span class="type">HQJob4</span>(), <span class="number">11</span>*<span class="number">1000</span>*<span class="number">60</span>,<span class="number">1000</span>*<span class="number">60</span>*<span class="number">10</span>);  <span class="comment">//延迟11分钟，设置没10分钟执行一次</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">public</span> void contextDestroyed(ServletContextEvent event) &#123;</span><br><span class="line">	  System.out.println(<span class="string">"=======timer销毁=========="</span>);</span><br><span class="line">    <span class="comment">//timer.cancel();</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</code></pre><h3 id="定时多个任务时，使用多线程，遇到某个线程抛异常终止任务"><a href="#定时多个任务时，使用多线程，遇到某个线程抛异常终止任务" class="headerlink" title="定时多个任务时，使用多线程，遇到某个线程抛异常终止任务"></a>定时多个任务时，使用多线程，遇到某个线程抛异常终止任务</h3><pre><code>&gt; 解决方案：在多线程run()方法里面，增加try{}catch{}
</code></pre><h3 id="通过HttpClient定时获取页面内容时，页面缓存，抓不到最新内容"><a href="#通过HttpClient定时获取页面内容时，页面缓存，抓不到最新内容" class="headerlink" title="通过HttpClient定时获取页面内容时，页面缓存，抓不到最新内容"></a>通过HttpClient定时获取页面内容时，页面缓存，抓不到最新内容</h3><pre><code>&gt; 解决方案：在工具类请求URL地址后面增加：url+&quot;?date=&quot; + new Date().getTime()
</code></pre><h2 id="一些方面的处理"><a href="#一些方面的处理" class="headerlink" title="一些方面的处理"></a>一些方面的处理</h2><h3 id="页面抓取规则调整"><a href="#页面抓取规则调整" class="headerlink" title="页面抓取规则调整"></a>页面抓取规则调整</h3><pre><code>&gt;  先抓列表，在抓内容；改为 抓取列表的同时，需要获取内容详情
</code></pre><h3 id="保存数据方式作调整"><a href="#保存数据方式作调整" class="headerlink" title="保存数据方式作调整"></a>保存数据方式作调整</h3><pre><code>&gt;  先抓取标题等概要信息，保存数据库，然后，更新内容信息，根据业务需求再删除一些非来源文章(版权问题)；
改为：直接控制来源，得到完整数据，再做批量保存；
</code></pre><h3 id="页面有一个不想要的内容，处理方法"><a href="#页面有一个不想要的内容，处理方法" class="headerlink" title="页面有一个不想要的内容，处理方法"></a>页面有一个不想要的内容，处理方法</h3><pre><code>&gt;  注释、JS代码、移除无用标签块
</code></pre>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Markdown简明语法]]></title>
      <url>http://www.jibaole.top/2016/12/02/Markdown/</url>
      <content type="html"><![CDATA[<p>   Markdown是一种标记语言，通过简单的语法，可以让文本内容更加优美、提高视觉效果，简洁、方便~</p>
<a id="more"></a>
<p><img src="http://p22kojxuy.bkt.clouddn.com/Article/img/2018/01/markdown.jpg" alt="Markdown"></p>
<h2 id="一、Markdown基本语法"><a href="#一、Markdown基本语法" class="headerlink" title="一、Markdown基本语法"></a>一、Markdown基本语法</h2><blockquote>
<h3 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h3><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">一级标题：#标题</span><br><span class="line">二级标题：##标题</span><br><span class="line">三级标题：###标题</span><br><span class="line">………………</span><br></pre></td></tr></table></figure>
</blockquote>
<p>一级标题：#标题<br>二级标题：##标题<br>三级标题：###标题  </p>
<blockquote>
<h3 id="段落与换行"><a href="#段落与换行" class="headerlink" title="段落与换行"></a>段落与换行</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">段落：段落的前后必须是空行  </span><br><span class="line">换行：可以在前一行的末尾加入至少两个空格，然后换行写其它的文字</span><br></pre></td></tr></table></figure>
<h3 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">多行引用：可每行前加<span class="string">'&lt;'</span>  </span><br><span class="line">换行：在前一行的末尾加入至少两个空格  </span><br><span class="line">嵌套：在每个<span class="string">'&lt;'</span>里面增加<span class="string">'&lt;'</span>,如：&lt;&lt;</span><br></pre></td></tr></table></figure>
</blockquote>
<ul>
<li>引用内容开始  <blockquote>
<blockquote>
<p>嵌套内容  </p>
</blockquote>
</blockquote>
</li>
</ul>
<blockquote>
<p>引用内容结束</p>
<h3 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">无序列表：符号 空格 </span><br><span class="line">有序列表：数字 . 空格</span><br><span class="line">  注：无序：一般是：*、+、-；有序：<span class="number">1.</span> <span class="number">2.</span> 等</span><br></pre></td></tr></table></figure>
</blockquote>
<ul>
<li>列表1  </li>
</ul>
<ul>
<li>列表1  </li>
</ul>
<ol>
<li>列表1  </li>
<li>列表1  </li>
</ol>
<blockquote>
<h3 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h3><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">代码块：代码块前后需要有至少一个空行，且每行代码前需要有至少一个 Tab 或四个空格  </span><br><span class="line">行内代码：也可以通过 ``，插入行内代码（` 是 Tab 键上边、数字 <span class="number">1</span> 键左侧的那个按键）</span><br></pre></td></tr></table></figure>
</blockquote>
<p><code>这里显示代码块</code></p>
<blockquote>
<h3 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">代码块：可以在一行中使用三个或更多的 *、- 或 _ 来添加分隔线（<span class="tag">&lt;<span class="name">hr</span>&gt;</span>）</span><br><span class="line">       多个字符之间可以有空格（空白符），但不能有其他字符</span><br></pre></td></tr></table></figure>
</blockquote>
<h2 id=""><a href="#" class="headerlink" title="**  "></a><strong><em>**</em></strong>  </h2><hr>
<blockquote>
<h3 id="超链接"><a href="#超链接" class="headerlink" title="超链接"></a>超链接</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">普通连接(一般格式)：[<span class="string">Google</span>](<span class="link">http://www.google.com/</span>)  //只显示文字，点击时跳转对应地址</span><br><span class="line">包含'title'的链接: [<span class="string">Google</span>](<span class="link">http://www.google.com/ "鼠标停留时，显示的文字说明"</span>)</span><br></pre></td></tr></table></figure>
</blockquote>
<p><a href="http://www.jibaole.top/" title="Blog地址">博客地址</a> </p>
<blockquote>
<h3 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">行内式:插入图片的语法和插入超链接的语法基本一致，只是在最前面多一个'!'</span><br><span class="line"><span class="code">      语法：![Google](https://avatars2.google.com/u/3265208.jpg "Google") </span></span><br><span class="line">参考式:</span><br><span class="line">   语法：1、![<span class="string">GitHub</span>][<span class="symbol">github</span>]</span><br><span class="line"><span class="code">        2、[github]: https://avatars2.google.com/u/3265208?v=3&amp;s=100 "Google"</span></span><br></pre></td></tr></table></figure>
</blockquote>
<p><img src="http://www.jibaole.top/img/toux.png" alt="头像" title="Blog头像"> </p>
<blockquote>
<h3 id="强调"><a href="#强调" class="headerlink" title="强调"></a>强调</h3><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">斜体：使用 * * 或 <span class="symbol">_</span> <span class="symbol">_</span> 包括的文本会被转换为 &lt;em&gt;&lt;/em&gt; </span><br><span class="line">     语法：*斜体* 或 <span class="symbol">_</span>斜体<span class="symbol">_</span></span><br><span class="line">加粗：使用 ** ** 或 <span class="symbol">__</span> <span class="symbol">__</span> 包括的文本会被转换为 &lt;strong&gt;&lt;/strong&gt;</span><br><span class="line">     语法：**加粗** 或 <span class="symbol">__</span>加粗<span class="symbol">__</span></span><br></pre></td></tr></table></figure>
</blockquote>
<p><em>斜体</em> 或 <em>斜体</em><br><strong>加粗</strong> 或 <strong>加粗</strong></p>
<blockquote>
<h3 id="字符转义"><a href="#字符转义" class="headerlink" title="字符转义"></a>字符转义</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">语法：在需要转义的字符前面添加<span class="string">'\'</span></span><br><span class="line">  比如:\ ` *_&#123;&#125;[]()<span class="comment">#+-.!</span></span><br></pre></td></tr></table></figure>
</blockquote>
<p>如：{}</p>
<h2 id="二、Markdown扩展语法"><a href="#二、Markdown扩展语法" class="headerlink" title="二、Markdown扩展语法"></a>二、Markdown扩展语法</h2><blockquote>
<h3 id="删除线"><a href="#删除线" class="headerlink" title="删除线"></a>删除线</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">语法：这就是 ~~删除线~~</span><br></pre></td></tr></table></figure>
</blockquote>
<p>如：<del>删除线</del></p>
<blockquote>
<h3 id="代码块和语法高亮"><a href="#代码块和语法高亮" class="headerlink" title="代码块和语法高亮"></a>代码块和语法高亮</h3><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">语   法：这里使用 ``` ``` 来包含多行代码，三个 ``` 要独占一行</span><br><span class="line">代码高亮：在第一组 ``` 之后添加代码的语言，如 <span class="string">'javascript'</span> 或 <span class="string">'js'</span></span><br></pre></td></tr></table></figure>
<h3 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h3><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">语法：使用 <span class="string">| 来分隔不同的单元格，使用 - 来分隔表头和其他行</span></span><br><span class="line"> </span><br><span class="line">    name <span class="string">| age</span></span><br><span class="line">    ---- <span class="string">| ---</span></span><br><span class="line">    Lear <span class="string">| 12</span></span><br><span class="line">    Mike <span class="string">|  32</span></span><br></pre></td></tr></table></figure>
</blockquote>
<table>
<thead>
<tr>
<th>name</th>
<th>age</th>
</tr>
</thead>
<tbody>
<tr>
<td>Lear</td>
<td>12</td>
</tr>
<tr>
<td>Mike</td>
<td>32</td>
</tr>
</tbody>
</table>
<h2 id="三、工-具"><a href="#三、工-具" class="headerlink" title="三、工 具"></a>三、工 具</h2><ul>
<li>常用的Markdown编辑器：<ul>
<li><a href="https://markdownpad.com/" target="_blank" rel="noopener">markdownpad下载</a></li>
<li><a href="http://code52.org/DownmarkerWPF/" target="_blank" rel="noopener">MarkPad下载</a></li>
<li><a href="https://github.com/nicoulaj/idea-markdown/" target="_blank" rel="noopener">Idea插件下载</a></li>
</ul>
</li>
<li>常用的Markdown在线编辑器：<ul>
<li><a href="http://www.jianshu.com/writer#/notebooks/" target="_blank" rel="noopener">简书</a></li>
<li><a href="https://maxiang.io/" target="_blank" rel="noopener">马克飞象</a></li>
<li><a href="http://write.blog.csdn.net/mdeditor?ticket=ST-523103-FJEjeFIq9V1uLee0donu-passport.csdn.net/" target="_blank" rel="noopener">CSDN</a></li>
</ul>
</li>
</ul>
<h2 id="四、参考文章"><a href="#四、参考文章" class="headerlink" title="四、参考文章"></a>四、参考文章</h2><ul>
<li>感谢提供，能够借以参考：<ul>
<li><a href="http://wowubuntu.com/markdown/" target="_blank" rel="noopener">Markdown 语法说明 (简体中文版)</a></li>
<li><a href="http://xianbai.me/learn-md/article/about/readme.html" target="_blank" rel="noopener">Markdown 入门参考</a></li>
<li><a href="https://github.com/nicoulaj/idea-markdown/" target="_blank" rel="noopener">Idea插件下载</a></li>
</ul>
</li>
</ul>
<h2 id="结束语"><a href="#结束语" class="headerlink" title="结束语"></a>结束语</h2><ul>
<li>学以致用，勿忘初衷！</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Hexo在Coding上备份、恢复]]></title>
      <url>http://www.jibaole.top/2016/11/28/Hexo-back/</url>
      <content type="html"><![CDATA[<p>   平时主要在公司、家伙其他地方写点东西，考虑到还需要重新搞一遍有点造轮子，就决定把Hexo部署到Git平台上，由于Coding可以建立私库，国内访问又给力…<br>   <a id="more"></a></p>
<h2 id="备份-amp-amp-恢复"><a href="#备份-amp-amp-恢复" class="headerlink" title="备份 &amp;&amp; 恢复"></a>备份 &amp;&amp; 恢复</h2><h3 id="一、创建Blog仓库"><a href="#一、创建Blog仓库" class="headerlink" title="一、创建Blog仓库"></a>一、创建Blog仓库</h3><ul>
<li>在Coding 平台新建Blog仓库，作为博客备份库，如下图所示：</li>
<li><img src="http://oawkjf6we.bkt.clouddn.com/img/2016/11/Hexo_back/Blog.png" alt="创建仓库"></li>
</ul>
<h3 id="二、clone-本地"><a href="#二、clone-本地" class="headerlink" title="二、clone 本地"></a>二、clone 本地</h3><ul>
<li>利用<a href="https://www.jetbrains.com/idea/" target="_blank" rel="noopener">Intellij Idea</a>将项目clone到本地<ul>
<li>步骤：VCS——&gt;Checkout from  Version Control——&gt;Git</li>
<li>复制Blog地址：<a href="https://git.coding.net/jibaole/Blog.git" target="_blank" rel="noopener">https://git.coding.net/jibaole/Blog.git</a></li>
<li>本地路径：<strong>D:\Idea_Workspaces</strong>,如下图所示：</li>
<li><img src="http://oawkjf6we.bkt.clouddn.com/img/2016/11/Hexo_back/local.png" alt="本地路径"></li>
</ul>
</li>
</ul>
<h3 id="三、备份"><a href="#三、备份" class="headerlink" title="三、备份"></a>三、备份</h3><ul>
<li>将博客下所有资源复制到Blog目录下<ul>
<li><img src="http://oawkjf6we.bkt.clouddn.com/img/2016/11/Hexo_back/source.png" alt="备份资源"></li>
</ul>
</li>
<li><p>在生成的.gitignore文件添加：</p>
  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/.deploy_git   <span class="comment">#执行：hexo d 命令后，Hexo生成的静态Html文件，推送到GitHub、Coding供访问</span></span><br><span class="line">/public</span><br></pre></td></tr></table></figure>
</li>
<li><p><a href="https://www.jetbrains.com/idea/" target="_blank" rel="noopener">Intellij Idea</a>下项目结构，如图所示：</p>
<ul>
<li><img src="http://oawkjf6we.bkt.clouddn.com/img/2016/11/Hexo_back/idea.png" alt="备份资源"></li>
</ul>
</li>
<li><p>然后在Intellij Idea中，对应Blog项目执行 add 、Commit 、Push等操作</p>
</li>
<li>这样我们在不同工作地点，都可以直接clone 下来，编辑 &amp; 新增 我们的博客内容</li>
<li>在本地执行：hexo clean &amp;&amp; hexo g &amp;&amp; hexo s 确认没什么问题</li>
<li>再执行：hexo clean &amp;&amp; hexo g &amp;&amp; hexo d   一键部署到deploy设置的Pages 平台</li>
<li>然后，再Push我们的Blog文件到<a href="https://coding.net/" target="_blank" rel="noopener">Coding</a>上，到新的环境，首先Pull我们的Blog项目，在此基础上进行编辑,如此循环~~ 是不是很方便啊~~</li>
</ul>
<hr>
<ul>
<li>或可以通过命令方式，如下：  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--在原博客路径，Git命令窗口执行--&gt;</span><br><span class="line"><span class="comment">#git初始化</span></span><br><span class="line">git init</span><br><span class="line"></span><br><span class="line"><span class="comment">#git 文件添加</span></span><br><span class="line">git add .</span><br><span class="line"></span><br><span class="line"><span class="comment">#git 提交</span></span><br><span class="line">git commit -m <span class="string">"初始化Hexo博客文件(备份)"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#添加远程仓库</span></span><br><span class="line">git remote add origin https://git.coding.net/jibaole/Blog.git</span><br><span class="line"></span><br><span class="line"><span class="comment">#push到hexo分支</span></span><br><span class="line">git push origin hexo  (或 git push <span class="_">-f</span> origin hexo )</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="结束语"><a href="#结束语" class="headerlink" title="结束语"></a>结束语</h2><ul>
<li>每天进步一点点，善于分享，贵在坚持!</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[使用Hexo在GitHub、Coding空间上搭建技术博客--处女篇(基于Intellij Idea)]]></title>
      <url>http://www.jibaole.top/2016/11/27/Hexo/</url>
      <content type="html"><![CDATA[<h3 id="Hexo是什么"><a href="#Hexo是什么" class="headerlink" title="Hexo是什么?"></a>Hexo是什么?</h3><ul>
<li>Hexo 的中文官网：<a href="http://hexo.io/zh-cn/" target="_blank" rel="noopener">http://hexo.io/zh-cn/</a></li>
<li>yelee主题：<a href="http://moxfive.coding.me/yelee/" target="_blank" rel="noopener">http://moxfive.coding.me/yelee/</a></li>
<li>Hexo是基于Node.js快速、高效而简洁的博客框架,可以通过编辑Markdown文件快速生成静态页面,托管到GitHub Pages、Coding Pages上,通过平台提供的域名访问。</li>
</ul>
<a id="more"></a>
<h2 id="部署前介绍"><a href="#部署前介绍" class="headerlink" title="部署前介绍"></a>部署前介绍</h2><blockquote>
<p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p>
</blockquote>
<h3 id="Hexo适合做什么"><a href="#Hexo适合做什么" class="headerlink" title="Hexo适合做什么?"></a>Hexo适合做什么?</h3><ul>
<li>当然，最适合做个人博客记录个人成长、技术总结、经验积累，并且可以部署到GitHub、Coding上。</li>
<li>作为技术博客是最佳的选择,学习一下<a href="http://wowubuntu.com/markdown/" target="_blank" rel="noopener">Markdown</a>基本语法,就是记录的利器</li>
</ul>
<h3 id="软件准备-本人在Windows环境"><a href="#软件准备-本人在Windows环境" class="headerlink" title="软件准备(本人在Windows环境)"></a>软件准备(本人在Windows环境)</h3><ul>
<li>安装Hexo、安装<a href="http://git-scm.com/" target="_blank" rel="noopener">Git</a>、<a href="http://nodejs.org/" target="_blank" rel="noopener">Node.js</a></li>
<li>工具：<a href="https://www.jetbrains.com/idea/" target="_blank" rel="noopener">Intellij Idea</a></li>
</ul>
<h3 id="文章前提"><a href="#文章前提" class="headerlink" title="文章前提"></a>文章前提</h3><ul>
<li>如果你对上面要求的软件一个都不了解的话，建议你先看如下内容（只是让你们先了解下，当时别照着文章内容做）：<ul>
<li><a href="http://www.jianshu.com/p/05289a4bc8b2" target="_blank" rel="noopener">如何搭建一个独立博客——简明Github Pages与Hexo教程</a></li>
<li><a href="http://www.jianshu.com/p/858ecf233db9" target="_blank" rel="noopener">通过Hexo在Github上搭建博客教程</a></li>
<li><a href="http://ibruce.info/2013/11/22/hexo-your-blog/" target="_blank" rel="noopener">hexo你的博客</a></li>
<li><a href="http://www.jianshu.com/p/701b1095da11" target="_blank" rel="noopener">手把手教你建github技术博客</a></li>
<li><a href="http://www.jianshu.com/p/05289a4bc8b2" target="_blank" rel="noopener">如何搭建一个独立博客——简明Github Pages与Hexo教程</a></li>
<li><a href="http://www.jianshu.com/p/e858a90d0a17" target="_blank" rel="noopener">windows下搭建hexo博客并将其部署到GitCafe终极教程</a></li>
<li><a href="http://www.jianshu.com/p/db7e64d86067" target="_blank" rel="noopener">使用Hexo搭建博客（三），博客配置、主题和写作</a></li>
<li><a href="http://www.jianshu.com/p/e7413116e9d4" target="_blank" rel="noopener">Hexo搭建WiKi</a></li>
<li><a href="https://www.zhihu.com/question/28058973" target="_blank" rel="noopener">怎么用hexo上传一个README.md到github?</a></li>
</ul>
</li>
</ul>
<h3 id="域名绑定"><a href="#域名绑定" class="headerlink" title="域名绑定"></a>域名绑定</h3><ul>
<li>如果你一开始就打算要绑定域名，则下面教程中所有可以填写域名的地方你都填写上你要绑定的域名，如果你没独立域名，那就使用 Github 默认给你的：XXXXXX.github.io 域名即可。</li>
</ul>
<hr>
<h2 id="部署开始"><a href="#部署开始" class="headerlink" title="部署开始"></a>部署开始</h2><h3 id="git-安装"><a href="#git-安装" class="headerlink" title="git 安装"></a>git 安装</h3><ul>
<li>双击运行 <strong>Git-2.7.0.2-64-bit.exe</strong>，接下来一律下一步，不需要多余的选择，假设你安装的目录位置跟我一样：C:\Program Files\Git</li>
<li>打开 Git Bash（路径：C:\Program Files\Git\git-bash.exe），输入：<code>git --version</code><ul>
<li>如下图，如果出现：<strong>git version 2.7.0.windows.2</strong>，这表示安装成功</li>
<li><img src="http://oawkjf6we.bkt.clouddn.com/img/2016/11/Hexohexo-start-a-1.png" alt="验证 git 安装"></li>
</ul>
</li>
</ul>
<h3 id="Node-js-安装"><a href="#Node-js-安装" class="headerlink" title="Node.js 安装"></a>Node.js 安装</h3><ul>
<li>双击运行 <strong>node-v5.7.0-x64.msi</strong>，接下来一律下一步，不需要多余的选择。</li>
<li>安装完之后，打开 Git Bash，输入：<code>npm -v</code><ul>
<li>如下图，如果出现：<strong>3.8.9</strong>，则表示 Node.js 安装成功。如果你没有显示这个信息，我怀疑你需要重启电脑试试看，因为我在给我弟讲解这一步的时候发现有这个问题。</li>
<li><img src="http://oawkjf6we.bkt.clouddn.com/img/2016/11/Hexohexo-start-a-2.png" alt="验证 node.js 安装"></li>
</ul>
</li>
</ul>
<h3 id="Node-js-源设置"><a href="#Node-js-源设置" class="headerlink" title="Node.js 源设置"></a>Node.js 源设置</h3><ul>
<li>在安装 Hexo 之前，先说一下 Node.js 的源，Node.js 官方源默认是：<a href="http://registry.npmjs.org" target="_blank" rel="noopener">http://registry.npmjs.org</a>，但是由于在国外，说不定你使用的时候就抽风无法下载任何软件。所以我们决定暂时使用淘宝提供的源，淘宝源官网：<a href="http://npm.taobao.org/" target="_blank" rel="noopener">http://npm.taobao.org/</a></li>
<li>在 Git Bash 中我们执行下面这一句（这是一整句的）：</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">alias</span> cnpm=<span class="string">"npm --registry=https://registry.npm.taobao.org \</span></span><br><span class="line"><span class="string">--cache=<span class="variable">$HOME</span>/.npm/.cache/cnpm \</span></span><br><span class="line"><span class="string">--disturl=https://npm.taobao.org/dist \</span></span><br><span class="line"><span class="string">--userconfig=<span class="variable">$HOME</span>/.cnpmrc"</span></span><br></pre></td></tr></table></figure>
<ul>
<li>现在验证下是否可以使用淘宝的 cnpm 命令：<code>cnpm info express</code><ul>
<li>如果能输出一大堆介绍，则说明成功了，以后每次要使用淘宝的源都需要这样来。现在除了默认的 <strong>npm</strong>，还多了一个 <strong>cnpm</strong> 可以使用，我们下面有关安装的讲解内容也都是基于此临时命令。</li>
<li>如果输出：bash: cnpm: command not found，则表示没成功，需要你在排查下</li>
</ul>
</li>
</ul>
<h3 id="安装-Hexo-框架"><a href="#安装-Hexo-框架" class="headerlink" title="安装 Hexo 框架"></a>安装 Hexo 框架</h3><blockquote>
<p>$ cnpm install -g hexo-cli</p>
</blockquote>
<h3 id="使用命令创建Hexo博客"><a href="#使用命令创建Hexo博客" class="headerlink" title="使用命令创建Hexo博客"></a>使用命令创建Hexo博客</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 进入刚才创建的博客文件夹 --&gt;</span></span><br><span class="line">$ cd <span class="tag">&lt;<span class="name">your-blog-folder</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 初始化博客(这个时间也会比较长，也有可能要等几分钟，有显示 WARN 也不用管)--&gt;</span></span><br><span class="line">$ hexo init</span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 安装博客项目所需的packages ,有显示 WARN 也不用管 --&gt;</span></span><br><span class="line">$ cnpm install</span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--安装hexo-server,否则不能使用：hexo s 命令--&gt;</span></span><br><span class="line">$ cnpm install hexo-server --save</span><br></pre></td></tr></table></figure>
<ul>
<li>安装完成之后，E:\git_work_space\hexo 目录结构是这样的：<ul>
<li><img src="http://oawkjf6we.bkt.clouddn.com/img/2016/11/Hexohexo-start-b-1.jpg" alt="安装 hexo 后的目录结构"><ul>
<li>现在我们启动 hexo 本地服务，看下默认的博客是怎样的，命令：<code>hexo server</code></li>
<li>现在用浏览器访问：<a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a>，效果如下图</li>
<li><img src="http://oawkjf6we.bkt.clouddn.com/img/2016/11/Hexohexo-start-b-2.jpg" alt="默认模板效果"></li>
<li>如果要停止 hexo 服务：在 Git Bash 下按 <code>Ctrl + C</code> 即可</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="选用其他主题"><a href="#选用其他主题" class="headerlink" title="选用其他主题"></a>选用其他主题</h3><ul>
<li>由于默认主题太大众了，所以现在我们换个主题。</li>
<li>你可以去这里找主题：<ul>
<li>hexo-theme：<a href="https://hexo.io/themes/" target="_blank" rel="noopener">https://hexo.io/themes/</a></li>
<li>hexo-github-theme-list：<a href="https://github.com/hexojs/hexo/wiki/Themes" target="_blank" rel="noopener">https://github.com/hexojs/hexo/wiki/Themes</a></li>
<li>有那些好看的hexo主题？：<a href="http://www.zhihu.com/question/24422335" target="_blank" rel="noopener">http://www.zhihu.com/question/24422335</a></li>
</ul>
</li>
<li>我这里选择的 <strong>yelee</strong>：<a href="https://github.com/MOxFIVE/hexo-theme-yelee" target="_blank" rel="noopener">https://github.com/MOxFIVE/hexo-theme-yelee</a><ul>
<li>原因是能最大化衬托出：目录、文章内容、代码块。因为我对这个博客的定位就是用来放技术类内容，所以不会让它太杂或是太花。只是目前这个颜色偏浅，后续还需要调整。</li>
</ul>
</li>
<li>现在假设你跟我要用的模板是一样：<ul>
<li>还是让 Git Bash 保持在 E:\git_work_space\hexo 目录下，然后输入命令：<code>git clone https://github.com/MOxFIVE/hexo-theme-yelee.git themes/yelee</code></li>
<li>这样就在 E:\git_work_space\hexo\themes 目录下生成了一个 yelle 文件夹，里面有我们刚刚 clone 下来的主题内容。</li>
<li>如果以后你不自己修改这个主题的话，可以考虑经常更新下作者的更新内容：<ul>
<li><code>cd e:/git_work_space/hexo/themes/yelee</code></li>
<li><code>git pull origin master</code></li>
</ul>
</li>
</ul>
</li>
<li>下载好主题文件之后，我们现在要修改 E:\git_work_space\hexo 目录下的项目配置文件：<strong>_config.yml</strong>，把对应的主题目录名改下，编辑如下图。<ul>
<li><img src="http://oawkjf6we.bkt.clouddn.com/img/2016/11/Hexohexo-start-b-3.jpg" alt="修改主题目录"></li>
</ul>
</li>
<li>更改主题目录名后，我们还要重新生成主题静态内容：<ul>
<li>继续在 Git Bash 中输入命令：<ul>
<li>重新生成静态博客的所有内容：<code>hexo generate</code></li>
<li>重启 hexo 本地服务：<code>hexo server</code></li>
<li>重新访问：<a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a>，效果如下图</li>
<li><img src="http://oawkjf6we.bkt.clouddn.com/img/2016/11/Hexohexo-start-b-4.jpg" alt="新主题效果"></li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="创建-Github-pages-并-SSH-授权"><a href="#创建-Github-pages-并-SSH-授权" class="headerlink" title="创建 Github pages 并 SSH 授权"></a>创建 Github pages 并 SSH 授权</h3><ul>
<li>现在假设你已经有一个 Gtihub 账号，你还需要一个特别的仓库，特别在仓库名就是你的 Github 账号登录名，比如我的用户名是：jibaole，那我要创建的仓库名字完整滴填写是：jibaole.github.io。<ul>
<li><img src="http://oawkjf6we.bkt.clouddn.com/img/2016/11/Hexo/hexo-start-c-1.png" alt="新主题效果"></li>
</ul>
</li>
<li><p>创建好仓库之后，要本地生成 SSH 秘钥，方便电脑上的 git 软件好提交内容到 Github 上</p>
<ul>
<li>在 Git Bash 中，输入：<code>ssh-keygen -t rsa -C &quot;你的邮箱地址&quot;</code>，然后回车，回车，再回车，一共 3 次回车，具体含义自己 Google。</li>
<li><p>比如我的：<code>ssh-keygen -t rsa -C &quot;1577608819@gmail.com&quot;</code>：</p>
</li>
<li><p>此时，生成密钥后，在你电脑目录：C:\Users\你的计算机用户名\.ssh 下，会生成两个文件：</p>
<ul>
<li>私钥：<strong>id_rsa</strong></li>
<li>公钥：<strong>id_rsa.pub</strong></li>
<li>如果生成的不是这样的文件，那删除掉这两个生成的，重新执行上面的命令，让它再一次生成。</li>
</ul>
</li>
<li>现在用记事本打开 id_rsa.pub，复制文件中的所有内容。<ul>
<li>访问：<a href="https://github.com/settings/ssh" target="_blank" rel="noopener">https://github.com/settings/ssh</a>，添加新秘钥，效果如下图<ul>
<li>Title：自己随便取</li>
<li>Key：把刚刚复制的都粘贴进来</li>
<li><img src="http://oawkjf6we.bkt.clouddn.com/img/2016/11/Hexohexo-start-c-3.jpg" alt="添加密钥"></li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="把本地的博客内容同步到-Github-上"><a href="#把本地的博客内容同步到-Github-上" class="headerlink" title="把本地的博客内容同步到 Github 上"></a>把本地的博客内容同步到 Github 上</h3><ul>
<li>要把本地的静态博客同步到 Github，我们还需要先安装两个跟部署相关的 hexo 插件：<ul>
<li>继续在 Git Bash 中输入：</li>
<li><code>cnpm install hexo -server --save</code></li>
<li><code>cnpm install hexo-deployer-git --save</code></li>
</ul>
</li>
<li><p>编辑全局 hexo 的配置文件：<strong>_config.yml</strong></p>
<ul>
<li>官网对此配置的介绍：<a href="https://hexo.io/zh-cn/docs/configuration.html" target="_blank" rel="noopener">https://hexo.io/zh-cn/docs/configuration.html</a></li>
<li>我自己的编辑内容初稿（你需要认真看的是含有中文注释的内容）：</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Hexo Configuration</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/configuration.html</span></span><br><span class="line"><span class="comment">## Source: https://github.com/hexojs/hexo/</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Site，这一块区域主要是设置博客的主要说明，需要注意的是：每个冒号后面都是有一个空格，然后再书写自己的内容的</span></span><br><span class="line">title: Paul</span><br><span class="line">subtitle: 这里只有代码相关，要了解更多 &gt;&gt;&gt; jibao.top</span><br><span class="line">description: 这里是 jibao.top 一部分</span><br><span class="line">author: Paul</span><br><span class="line">email: 1577608819@qq.com</span><br><span class="line">language: zh-CN</span><br><span class="line">timezone:</span><br><span class="line"></span><br><span class="line"><span class="comment"># URL，这一块一般可以设置的是 url 这个参数，比如我要设置绑定域名的，这里就需要填写我的域名信息</span></span><br><span class="line"><span class="comment">## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'</span></span><br><span class="line">url: http://www.jibaole.top</span><br><span class="line">root: /</span><br><span class="line">permalink: :year/:month/:day/:title/</span><br><span class="line">permalink_defaults:</span><br><span class="line"></span><br><span class="line"><span class="comment"># Directory</span></span><br><span class="line">source_dir: <span class="built_in">source</span></span><br><span class="line">public_dir: public</span><br><span class="line">tag_dir: tags</span><br><span class="line">archive_dir: archives</span><br><span class="line">category_dir: categories</span><br><span class="line">code_dir: downloads/code</span><br><span class="line">i18n_dir: :lang</span><br><span class="line">skip_render:</span><br><span class="line"></span><br><span class="line"><span class="comment"># Writing</span></span><br><span class="line">new_post_name: :title.md <span class="comment"># File name of new posts</span></span><br><span class="line">default_layout: post</span><br><span class="line">titlecase: <span class="literal">false</span> <span class="comment"># Transform title into titlecase</span></span><br><span class="line">external_link: <span class="literal">true</span> <span class="comment"># Open external links in new tab</span></span><br><span class="line">filename_case: 0</span><br><span class="line">render_drafts: <span class="literal">false</span></span><br><span class="line">post_asset_folder: <span class="literal">false</span></span><br><span class="line">relative_link: <span class="literal">false</span></span><br><span class="line">future: <span class="literal">true</span></span><br><span class="line">highlight:</span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></span><br><span class="line">  line_number: <span class="literal">true</span></span><br><span class="line">  auto_detect: <span class="literal">false</span></span><br><span class="line">  tab_replace:</span><br><span class="line"></span><br><span class="line"><span class="comment"># Category &amp; Tag</span></span><br><span class="line">default_category: uncategorized</span><br><span class="line">category_map:</span><br><span class="line">tag_map:</span><br><span class="line"></span><br><span class="line"><span class="comment"># Date / Time format</span></span><br><span class="line"><span class="comment">## Hexo uses Moment.js to parse and display date</span></span><br><span class="line"><span class="comment">## You can customize the date format as defined in</span></span><br><span class="line"><span class="comment">## http://momentjs.com/docs/#/displaying/format/</span></span><br><span class="line">date_format: YYYY-MM-DD</span><br><span class="line">time_format: HH:mm:ss</span><br><span class="line"></span><br><span class="line"><span class="comment"># Pagination</span></span><br><span class="line"><span class="comment">## Set per_page to 0 to disable pagination</span></span><br><span class="line">per_page: 10</span><br><span class="line">pagination_dir: page</span><br><span class="line"></span><br><span class="line"><span class="comment"># Extensions</span></span><br><span class="line"><span class="comment">## Plugins: https://hexo.io/plugins/</span></span><br><span class="line"><span class="comment">## Themes: https://hexo.io/themes/</span></span><br><span class="line">theme: yelee</span><br><span class="line"></span><br><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## 这里是重点，这里是修改发布地址，因为我们前面已经加了 SSH 密钥信息在 Github 设置里面了，所以只要我们电脑里面持有那两个密钥文件就可以无需密码地跟 Github 做同步。</span></span><br><span class="line"><span class="comment">## 需要注意的是这里的 repo 采用的是 ssh 的地址，而不是 https 的。分支我们默认采用 master 分支，以后你翅膀硬了要换其他也无所谓。</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/deployment.html</span></span><br><span class="line">deploy:</span><br><span class="line"> <span class="built_in">type</span>: git</span><br><span class="line"> repo:</span><br><span class="line">       github: git@github.com:jibaole/jibaole.github.io.git,master</span><br><span class="line">       coding: git@git.coding.net:jibaole/jibaole.git,master</span><br></pre></td></tr></table></figure>
</li>
<li><p>编辑全局配置后我们需要重新部署：</p>
<ul>
<li>继续在 Git Bash 中输入命令：</li>
<li>先清除掉已经生成的旧文件：<code>hexo clean</code></li>
<li>再生成一次静态文件：<code>hexo generate</code></li>
<li>在本地预览下：<code>hexo server</code></li>
<li>本地没问题之后，Ctrl + C 停掉本地预览。</li>
<li>在部署到 Github 之前，需要先确定你是否已经用过 Git，如果你没用过，则此时你需要做如下设置，在 Git Bash 中依次输入下面两个命令：<ul>
<li><code>git config --global user.email &quot;你的 Github 注册邮箱地址&quot;</code></li>
<li><code>git config --global user.name &quot;你的 Github 用户名&quot;</code></li>
</ul>
</li>
<li>使用部署命令部署到 Github 上：<code>hexo deploy</code>，有弹出下面提示框，请输入：<code>yes</code><ul>
<li><img src="http://oawkjf6we.bkt.clouddn.com/img/2016/11/Hexohexo-start-d-1.jpg" alt="确认提交"></li>
</ul>
</li>
<li>提交成功效果如下：<ul>
<li><img src="http://oawkjf6we.bkt.clouddn.com/img/2016/11/Hexohexo-start-d-2.jpg" alt="提交成功"></li>
</ul>
</li>
<li>访问服务器地址进行检查：<a href="http://jibaole.github.io" target="_blank" rel="noopener">http://jibaole.github.io</a>，效果如下<ul>
<li><img src="http://oawkjf6we.bkt.clouddn.com/img/2016/11/Hexohexo-start-b-4.jpg" alt="服务器效果"></li>
</ul>
</li>
<li>但是，也不排除你 deploy 不了到 Github，报这个错误：<code>Host key verification failed</code>，那解决办法如下：<ul>
<li>还是在 Git Bash 界面中，输入如下命令：<code>ssh -T git@github.com</code>，根据界面提示，输入：<code>yes</code> 回车。之后你可以再试一下是否可以 deploy。</li>
</ul>
</li>
</ul>
</li>
<li>通过上面几次流程我们也就可以总结：以后，每次发表新文章要部署都按这样的流程来：<ul>
<li><code>hexo clean</code></li>
<li><code>hexo generate</code></li>
<li><code>hexo deploy</code></li>
</ul>
</li>
<li><p>也因为这几个命令太频繁了，所以又有了精简版的命令：</p>
<ul>
<li><code>hexo clean == hexo clean</code></li>
<li><code>hexo g == hexo generate</code></li>
<li><code>hexo s == hexo server</code></li>
<li><p><code>hexo d == hexo deploy</code></p>
<blockquote>
<p>或使用：hexo clean &amp;&amp; hexo g &amp;&amp; hexo s     清数据-&gt;生成-&gt;启动本地服务(本地)</p>
<pre><code>hexo clean &amp;&amp; hexo g &amp;&amp; hexo d     一键部署Pages空间(线上)
</code></pre></blockquote>
</li>
</ul>
<h3 id="常用插件"><a href="#常用插件" class="headerlink" title="常用插件"></a>常用插件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; 本地服务：  npm install hexo -server --save</span><br><span class="line">&gt; 部署到Pages: cnpm install hexo-deployer-git --save</span><br><span class="line">&gt; 搜索：npm install --save hexo-generator-search</span><br><span class="line">&gt; RSS: npm install hexo-generator-feed --save</span><br></pre></td></tr></table></figure>
<h3 id="绑定域名"><a href="#绑定域名" class="headerlink" title="绑定域名"></a>绑定域名</h3></li>
<li><p>绑定域名不排除会遇到很多网络问题或是七七八八，所以这里先提供先官网的一些说明：</p>
<ul>
<li><a href="https://help.github.com/articles/setting-up-your-pages-site-repository/" target="_blank" rel="noopener">https://help.github.com/articles/setting-up-your-pages-site-repository/</a></li>
<li><a href="https://help.github.com/articles/quick-start-setting-up-a-custom-domain/" target="_blank" rel="noopener">https://help.github.com/articles/quick-start-setting-up-a-custom-domain/</a></li>
<li><a href="https://help.github.com/articles/setting-up-an-apex-domain/" target="_blank" rel="noopener">https://help.github.com/articles/setting-up-an-apex-domain/</a></li>
<li><a href="https://help.github.com/articles/troubleshooting-custom-domains/" target="_blank" rel="noopener">https://help.github.com/articles/troubleshooting-custom-domains/</a></li>
<li><a href="https://help.github.com/articles/custom-domain-redirects-for-github-pages-sites/" target="_blank" rel="noopener">https://help.github.com/articles/custom-domain-redirects-for-github-pages-sites/</a></li>
</ul>
</li>
<li><p>首先我们要一个 CNAME 文件（文件名叫 CNAME，没有文件后缀的），把该文件放在 E:\git_work_space\hexo\source 目录下，以后一些需要放在根目录的资源文件都可以放这里。如果你找不到这样的文件可以到我的项目上下载：<a href="https://github.com/jibaole/jibaole.github.io" target="_blank" rel="noopener">https://github.com/jibaole/jibaole.github.io</a></p>
<ul>
<li>CNAME 上的内容需要写你具体要绑定的域名信息，比如我是：<strong>www.jibaole.top</strong>，：</li>
</ul>
</li>
<li><p>接着我们需要到阿里云上设置域名解析：<a href="https://www.aliyun.com/" target="_blank" rel="noopener">https://www.aliyun.com/</a></p>
<ul>
<li><img src="http://oawkjf6we.bkt.clouddn.com/img/2016/11/Hexo/20161128161212.png" alt="设置域名解析"><blockquote>
<p>提高访问速度：<br>默认记录值(国内)：jibaole.coding.me.<br>另一个记录值(海外)：jibaole.github.io.</p>
</blockquote>
</li>
</ul>
</li>
<li><p>设置好之后，等过几分钟域名解析好之后，我们访问：<a href="http://www.jibao.top" target="_blank" rel="noopener">http://www.jibao.top</a>，效果如下：</p>
<ul>
<li><img src="http://oawkjf6we.bkt.clouddn.com/img/2016/11/Hexo/index.png" alt="域名访问效果"></li>
<li>2016-08-19 更新：Github 提示，建议我们使用 CNAME 方式来指向，别用 IP，所以建议你这样配置，还是以我的为例：<ul>
<li>主机记录：code</li>
<li>记录类型：CNAME</li>
<li>记录值：jibaole.github.io.（后面的这个点别忘记了）</li>
<li>还有，要记得把 CNAME 那个文件再 deploy 到 Github 哦，不然还是访问不了的。</li>
</ul>
</li>
</ul>
<h3 id="整合-IntelliJ-IDEA-提高效率"><a href="#整合-IntelliJ-IDEA-提高效率" class="headerlink" title="整合 IntelliJ IDEA 提高效率"></a>整合 IntelliJ IDEA 提高效率</h3></li>
<li><p>为了提交写作效率，我个人建议使用 IntelliJ IDEA 作为 Markdown 编辑工具</p>
<ul>
<li>IntelliJ IDEA 有各种各样的快捷键支持你的操作</li>
<li>IntelliJ IDEA 可以快速地全文检索项目所有的文件</li>
<li>对 JavaScript、CSS、HTML 等常见语言的良好支持，方便你修改你的主题</li>
</ul>
</li>
<li>如果你还不会使用 IntelliJ IDEA 或是 JetBrains 家其他产品，你可以看下我写一整套教程：<a href="http://wiki.jikexueyuan.com/project/intellij-idea-tutorial/" target="_blank" rel="noopener">http://wiki.jikexueyuan.com/project/intellij-idea-tutorial/</a></li>
<li>现在我们用 IntelliJ IDEA 打开我们本地目录：E:\git_work_space\hexo，打开后效果如下图：<ul>
<li><img src="http://oawkjf6we.bkt.clouddn.com/img/2016/11/Hexohexo-start-f-1.jpg" alt="IntelliJ IDEA 打开项目"></li>
</ul>
</li>
<li>由于 IntelliJ IDEA 在 Windows 下的默认终端是 <code>cmd</code> 不好用，我们现在需要重新修改下 IntelliJ IDEA 的终端工具，把它指向我们习惯的 Git Bash，这样方便操作，如下图 gif 演示。<ul>
<li><img src="http://oawkjf6we.bkt.clouddn.com/img/2016/11/Hexohexo-start-f-2.gif" alt="IntelliJ IDEA 下操作 hexo"></li>
<li>如 gif 演示，我们可以 IntelliJ IDEA 里面安心写文章、做发布等操作。</li>
</ul>
</li>
<li>为了更稳定地使用 IntelliJ IDEA，在不修改主题的情况下，我们还需要这样做：<ul>
<li><img src="http://oawkjf6we.bkt.clouddn.com/img/2016/11/Hexohexo-start-f-3.jpg" alt="IntelliJ IDEA 下操作 hexo"></li>
</ul>
</li>
<li><p>hexo 新文章内容的开头需要这样定义：</p>
<ul>
<li>categories：表示文章所属分类</li>
<li>tags：表示文章所属标签</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 这是文章标题</span><br><span class="line">date: 2016-02-28 17:58:27</span><br><span class="line">categories: [Hexo,IntelliJ IDEA]</span><br><span class="line">tags: [Hexo,IntelliJ IDEA,Git,Github,Node.js]</span><br><span class="line">---</span><br></pre></td></tr></table></figure>
<h2 id="结束语"><a href="#结束语" class="headerlink" title="结束语"></a>结束语</h2></li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[python技术总结]]></title>
      <url>http://www.jibaole.top/2016/11/27/python%E6%8A%80%E6%9C%AF%E6%80%BB%E7%BB%93/</url>
      <content type="html"><![CDATA[<p>  不知觉python总结都有四十页了，虽然@@可能很多都是基础性的，仍然有成就感。和之前一样，仍然全部贴出来，而不是把新的贴出来，请谅解。<br>这次新增的部分包括c扩展，排序，ftp，源码安全，性能，代码检查等。<br><a id="more"></a><br><img src="http://p22kojxuy.bkt.clouddn.com/Article/img/2018/01/tython.jpg" alt="Python"></p>
<h2 id="字符串的使用"><a href="#字符串的使用" class="headerlink" title="字符串的使用"></a>字符串的使用</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">1、 Python的字符串是不可以改变的。但是你可以操作字符串以形成新的字符串。</span><br><span class="line"></span><br><span class="line">2、 字符串中删除一个字串。没有直接提供这个方法，但是replace可以实现：</span><br><span class="line"></span><br><span class="line"><span class="string">"abc def"</span>.replace(<span class="string">" "</span>, <span class="string">""</span>)</span><br><span class="line"></span><br><span class="line">同样的功能还有一个方法：translate。它的原有作用是将字符串中的某个字符替换为另外一个字符，注意，不是字符串。它的第一个参数是一个转换表。第二个参数是要删除的字符串。我们可以利用第二个参数del，实现这个功能。同时，第一个参数设置为None。</span><br><span class="line"></span><br><span class="line">translate可能更高效一点。另外，它的第二个参数可以使一个字符串，含有多个字符，这样就会删除多个。</span><br><span class="line"></span><br><span class="line">注意：translate方法不会对这个字符串操作，而是返回一个新的字符串。</span><br><span class="line"></span><br><span class="line">3、 strip方法：去除字符串两侧的空格，返回新的字符串。这个功能非常有用。</span><br><span class="line"></span><br><span class="line">4、 str中有一个函数，format，非常强大，有时间一定要看一下。</span><br><span class="line"></span><br><span class="line">5、 endswitch：检查字符串是否已某字符串结尾。startswith：检查是否已某字符串开头。</span><br><span class="line"></span><br><span class="line">6、 partition：它将字符串按指定的字符串分为三个部分，返回一个元组。第一个是指定字符串前面内容，第二个是指定字符串，第三个是指定字符串后面的内容。用于字符串解析非常好用。</span><br><span class="line"></span><br><span class="line">7、 split：将字符串按照某指定字符串分割成多个子字符串，返回一个分割后的列表。</span><br><span class="line"></span><br><span class="line">8、 join：将一个字符串列表中的各个字符串连接起来，中间插入指定的字符串。</span><br><span class="line"></span><br><span class="line">9、 find的返回值不是<span class="literal">false</span>和<span class="literal">true</span>，所以不可以直接用于<span class="keyword">if</span>判断。需要判断<span class="keyword">if</span> s.find(‘’) &gt;= 0:</span><br><span class="line"></span><br><span class="line">10、 基于字典的格式化：</span><br><span class="line"></span><br><span class="line">a) sh = <span class="string">''</span><span class="string">'</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">b) python -m compileall -fl ../src;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">c) python -m compileall -fl ../src/micbase;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">d) mkdir %(packname)s;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">e) mdkir %(packname)s;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">f) '</span><span class="string">''</span> % &#123;<span class="string">'packname'</span>:sys.argv[1], &#125;</span><br><span class="line"></span><br><span class="line">g) <span class="built_in">print</span>(sh)</span><br></pre></td></tr></table></figure>
<p><a href="http://www.wailian.work/image/Mg8kko" target="_blank" rel="noopener"><img src="http://s1.wailian.download/2017/12/29/Koala0c954.th.jpg" alt="Koala0c954.th.jpg"></a></p>
<h3 id="字符串函数"><a href="#字符串函数" class="headerlink" title="字符串函数:"></a>字符串函数:</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">函数的作用域：函数中定义一个变量，如果和全局变量重名，则全局变量名称就会被覆盖，也就是，这里对这个变量的更改，不会更改全局变量。但是，如果直接使用的话，是会使用全局变量的。同时，如果想要修改全局变量，需要制定是全局变量：global a</span><br></pre></td></tr></table></figure>
<h3 id="字符串拼接"><a href="#字符串拼接" class="headerlink" title="字符串拼接"></a>字符串拼接</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">    关于函数的入参判断：如果如此为空，可能会发生异常。当异常发生后，可能会出现一种情况，一个事情做到了一半，就没有在进行下去，可能会造成内存泄露。这个问题如何解决？按照C的方式，每个入参都做判断是可以解决的，但是这样太麻烦了。而且看很多开源代码页没有这样来做。是不是有更好的方法？换一种思路，在调用之前确保不为空。在看看开源的代码是怎么做的。特别是openstack。</span><br><span class="line">字符串拼接。。。字符串拼接。。。字符串拼接。。。</span><br><span class="line">字符串拼接。。。</span><br></pre></td></tr></table></figure>
<h3 id="正则表达式："><a href="#正则表达式：" class="headerlink" title="正则表达式："></a>正则表达式：</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"> 为什么要学习正则：主要是为了处理字符串更加方便，特别是为后面进行代码生成做储备。</span><br><span class="line"></span><br><span class="line">match是匹配字符串的开头是否匹配，而search是查看字符串任意起始位置是否满足。</span><br><span class="line"></span><br><span class="line">sub可以对字符串中模式匹配的部分进行替换</span><br><span class="line"></span><br><span class="line">split：可以对字符串进行分割，这里是根据模式分割。</span><br></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[第一篇博客]]></title>
      <url>http://www.jibaole.top/2016/11/26/hello-world/</url>
      <content type="html"><![CDATA[<p>   简介：Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.<br><a id="more"></a></p>
<h2 id="快速了解-一级标题"><a href="#快速了解-一级标题" class="headerlink" title="快速了解(一级标题)"></a>快速了解(一级标题)</h2><h3 id="创建文章-二级标题"><a href="#创建文章-二级标题" class="headerlink" title="创建文章(二级标题)"></a>创建文章(二级标题)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<h3 id="运行hexo"><a href="#运行hexo" class="headerlink" title="运行hexo"></a>运行hexo</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ 启动hexo server</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<h3 id="生成静态文件"><a href="#生成静态文件" class="headerlink" title="生成静态文件"></a>生成静态文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="部署到站点"><a href="#部署到站点" class="headerlink" title="部署到站点"></a>部署到站点</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>
]]></content>
    </entry>
    
  
  
</search>
